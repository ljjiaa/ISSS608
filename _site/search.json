[
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "OECD education director Andreas Schleicher shared in a BBC article that “Singapore managed to achieve excellence without wide differences between children from wealthy and disadvantaged families.” (2016) However, there are public concern about the inequality, particularly in the context between elite schools and neighborhood school, between families with higher socioeconomic status and those with relatively lower socioeconomic status and immigration and non-immigration families.\n\n\nThis analysis using the 2022 PISA data aims to explore these aspects in Singapore’s context. The objective of this study is to adopt appropriate Exploratory Data Analysis (EDA) methods and ggplot2 functions to reveal:\n\nthe distribution of Singapore students’ performance in mathematics, reading, and science, and\nthe relationship between these performances with schools, gender and socioeconomic status of the students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#overview",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#overview",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "OECD education director Andreas Schleicher shared in a BBC article that “Singapore managed to achieve excellence without wide differences between children from wealthy and disadvantaged families.” (2016) However, there are public concern about the inequality, particularly in the context between elite schools and neighborhood school, between families with higher socioeconomic status and those with relatively lower socioeconomic status and immigration and non-immigration families.\n\n\nThis analysis using the 2022 PISA data aims to explore these aspects in Singapore’s context. The objective of this study is to adopt appropriate Exploratory Data Analysis (EDA) methods and ggplot2 functions to reveal:\n\nthe distribution of Singapore students’ performance in mathematics, reading, and science, and\nthe relationship between these performances with schools, gender and socioeconomic status of the students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#data-preparation",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#data-preparation",
    "title": "Take-home Exercise 1",
    "section": "2 Data preparation",
    "text": "2 Data preparation\n\n2.1 Loading R packages\nFirst, following code chunk with pacman::p_load() function is used to load required R packages into our working environment:\n\npacman::p_load(tidyverse, haven, patchwork, ggdist, ggrain, ggridges)\n\n\n\n2.2 Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data into working environment\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\nThe data table consists of 613,744 observations and 1,279 variables.\n\n\n2.3 Data extracting\nReferring to PISA code book, it is noted that the data table include results from 81 participating countries. As this study focus on Singapore’s context, relevant observations is filtered using filter() on the country code variable “CNT”.\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\nThe filtered data is then saved in R Data Format and re-imported into the working environment.\n\nwrite_rds(stu_qqq_SG, \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")\nstu_qqq_SG\n\n# A tibble: 6,606 × 1,279\n   CNT   CNTRYID CNTSCHID CNTSTUID CYC   NatCen STRATUM SUBNATIO REGION  OECD\n   &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1 SGP       702 70200052 70200001 08MS  070200 SGP01   7020000   70200     0\n 2 SGP       702 70200134 70200002 08MS  070200 SGP01   7020000   70200     0\n 3 SGP       702 70200112 70200003 08MS  070200 SGP01   7020000   70200     0\n 4 SGP       702 70200004 70200004 08MS  070200 SGP01   7020000   70200     0\n 5 SGP       702 70200152 70200005 08MS  070200 SGP01   7020000   70200     0\n 6 SGP       702 70200043 70200006 08MS  070200 SGP01   7020000   70200     0\n 7 SGP       702 70200049 70200007 08MS  070200 SGP01   7020000   70200     0\n 8 SGP       702 70200107 70200008 08MS  070200 SGP01   7020000   70200     0\n 9 SGP       702 70200012 70200009 08MS  070200 SGP01   7020000   70200     0\n10 SGP       702 70200061 70200010 08MS  070200 SGP01   7020000   70200     0\n# ℹ 6,596 more rows\n# ℹ 1,269 more variables: ADMINMODE &lt;dbl&gt;, LANGTEST_QQQ &lt;dbl&gt;,\n#   LANGTEST_COG &lt;dbl&gt;, LANGTEST_PAQ &lt;dbl&gt;, Option_CT &lt;dbl&gt;, Option_FL &lt;dbl&gt;,\n#   Option_ICTQ &lt;dbl&gt;, Option_WBQ &lt;dbl&gt;, Option_PQ &lt;dbl&gt;, Option_TQ &lt;dbl&gt;,\n#   Option_UH &lt;dbl&gt;, BOOKID &lt;dbl&gt;, ST001D01T &lt;dbl&gt;, ST003D02T &lt;dbl&gt;,\n#   ST003D03T &lt;dbl&gt;, ST004D01T &lt;dbl&gt;, ST250Q01JA &lt;dbl&gt;, ST250Q02JA &lt;dbl&gt;,\n#   ST250Q03JA &lt;dbl&gt;, ST250Q04JA &lt;dbl&gt;, ST250Q05JA &lt;dbl&gt;, ST250D06JA &lt;chr&gt;, …\n\n\nAfter completing the previous steps, we are left with a substantial data table consisting 1,279 variables. At this point, it is essential to narrow down these variables to focus on the most relevant ones. By examining the code book, the following variables were chosen to align with the objective of this study:\n\n\n\n\n\n\n\n\nVariable name\nLabel\nDescription\n\n\n\n\nCNTSTUID\nIntl. Student ID\nStudent ID of participating students\n\n\nSTRATUM\nStratum ID 5-character\n(cnt + original stratum ID)\nType of School\nSGP01 : Public / Secondary\nSGP03 : Private / Secondary\n\n\nST004D01T\nStudent (Standardized) Gender\nGender\n1 : Female\n2 : Male\n\n\nESCS\nIndex of economic, social and cultural status\nMeasurement of student’s socio-economic status\n\n\nPV1MATH\nPlausible Value 1 in Mathematics\nStudent’s performance for Mathematics\n\n\nPV1READ\nPlausible Value 1 in Reading\nStudent’s performance for Reading\n\n\nPV1SCIE\nPlausible Value 1 in Science\nStudent’s performance for Science\n\n\n\nWe use select() and rename()from dplyr to select the column and rename the variable for clarity.\n\nstu_qqq_SG_selected &lt;- stu_qqq_SG %&gt;%\n  select('CNTSTUID',\n         'STRATUM',\n         'ST004D01T',\n         'ESCS',\n         'PV1MATH',\n         'PV1READ',\n         'PV1SCIE') %&gt;%\n  rename(StudentID = CNTSTUID,\n         TypeofSchool = STRATUM,\n         Gender = ST004D01T,\n         MATH = PV1MATH,\n         READ = PV1READ,\n         SCIENCE = PV1SCIE)\n\n\n\n2.4 Summary Statistics of data table\n\nData tableSummaryDuplicateMissing\n\n\n\nstu_qqq_SG_selected\n\n# A tibble: 6,606 × 7\n   StudentID TypeofSchool Gender    ESCS  MATH  READ SCIENCE\n       &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n 1  70200001 SGP01             1  0.184   639.  676.    711.\n 2  70200002 SGP01             2  0.826   697.  626.    671.\n 3  70200003 SGP01             2 -1.04    694.  620.    666.\n 4  70200004 SGP01             2 -0.961   427.  381.    340.\n 5  70200005 SGP01             1  0.0856  436.  448.    456.\n 6  70200006 SGP01             1  0.127   570.  469.    475.\n 7  70200007 SGP01             2 -0.0154  772.  745.    694.\n 8  70200008 SGP01             2  1.16    568.  527.    583.\n 9  70200009 SGP01             1  1.47    740.  722.    725.\n10  70200010 SGP01             2  0.520   586.  540.    590.\n# ℹ 6,596 more rows\n\n\n\n\n\nsummary(stu_qqq_SG_selected)\n\n   StudentID        TypeofSchool           Gender           ESCS        \n Min.   :70200001   Length:6606        Min.   :1.000   Min.   :-3.5488  \n 1st Qu.:70201836   Class :character   1st Qu.:1.000   1st Qu.:-0.2327  \n Median :70203674   Mode  :character   Median :2.000   Median : 0.4817  \n Mean   :70203673                      Mean   :1.508   Mean   : 0.2904  \n 3rd Qu.:70205513                      3rd Qu.:2.000   3rd Qu.: 0.9036  \n Max.   :70207345                      Max.   :2.000   Max.   : 3.2780  \n                                                       NA's   :47       \n      MATH            READ          SCIENCE     \n Min.   :218.6   Min.   :135.9   Min.   :187.5  \n 1st Qu.:503.1   1st Qu.:476.9   1st Qu.:495.7  \n Median :582.5   Median :552.9   Median :568.7  \n Mean   :574.2   Mean   :544.4   Mean   :560.8  \n 3rd Qu.:648.2   3rd Qu.:619.6   3rd Qu.:631.1  \n Max.   :943.0   Max.   :859.5   Max.   :873.3  \n                                                \n\n\n\n\nCheck for duplicated value\n\nstu_qqq_SG_selected[duplicated(stu_qqq_SG_selected),]\n\n# A tibble: 0 × 7\n# ℹ 7 variables: StudentID &lt;dbl&gt;, TypeofSchool &lt;chr&gt;, Gender &lt;dbl&gt;, ESCS &lt;dbl&gt;,\n#   MATH &lt;dbl&gt;, READ &lt;dbl&gt;, SCIENCE &lt;dbl&gt;\n\n\n\n\nChecking for missing data\n\nstu_qqq_SG_selected %&gt;% summarise_all(funs(sum(is.na(.))))\n\n# A tibble: 1 × 7\n  StudentID TypeofSchool Gender  ESCS  MATH  READ SCIENCE\n      &lt;int&gt;        &lt;int&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;\n1         0            0      0    47     0     0       0\n\n\nThe output shows 47 missing values for ESCS, the observations were dropped using drop_na():\n\nstu_qqq_SG_selected2 &lt;- stu_qqq_SG_selected %&gt;% drop_na()\n\n\n\n\n\n⚠️ Data quality issues\n\n\nInappropriate column types\nFollowing columns were converted to appropriate type:\n\n“StudentID” : convert from &lt;dbl&gt; to &lt;chr&gt;\n“TypeofSchool” : convert from &lt;chr&gt; to &lt;fct&gt;\n“Gender” : convert from &lt;dbl&gt; to &lt;fct&gt;\n\nNon-Descriptive Values\nValues from “Gender” and “TypeofSchool” were recoded to descriptive values using fct_recode to improve clarity.\nDisaggregated ESCS Index\nBinning of the ESCS index into categories of most disadvantaged to the most advantaged groups can facilitate more granular analysis and provide meaningful insights. 4 groups of students of equal size were created using cut_number(), each group comprises 25% of the population of 15-year-old students in Singapore.\n\n\n\nCode\nstu_qqq_SG_converted &lt;- stu_qqq_SG_selected2 %&gt;%\n  \n  # change column type\n  mutate(StudentID = as.character(StudentID),         \n         TypeofSchool = as.factor(TypeofSchool),\n         Gender = as.factor(Gender)) %&gt;%\n  # recode non-descriptive values  \n  mutate(Gender = fct_recode (Gender,\n                              \"Female\" = \"1\",\n                              \"Male\" = \"2\"),\n           TypeofSchool = fct_recode (TypeofSchool,\n                              \"Public\" = \"SGP01\",\n                              \"Private\" = \"SGP03\"),\n  # binning of disaggregated data       \n         binned_ESCS = cut_number(stu_qqq_SG_selected2$ESCS, \n                                    n = 4, \n                                    labels = c(\"Disadvantaged\",\n                                               \"Slightly Disadvantaged\",\n                                               \"Slightly Advantaged\",\n                                               \"Advantaged\")))\n\n\nFollowing final data table is used for Exploratory data analysis:\n\nstu_qqq_SG_converted\n\n# A tibble: 6,559 × 8\n   StudentID TypeofSchool Gender    ESCS  MATH  READ SCIENCE binned_ESCS        \n   &lt;chr&gt;     &lt;fct&gt;        &lt;fct&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;fct&gt;              \n 1 70200001  Public       Female  0.184   639.  676.    711. Slightly Disadvant…\n 2 70200002  Public       Male    0.826   697.  626.    671. Slightly Advantaged\n 3 70200003  Public       Male   -1.04    694.  620.    666. Disadvantaged      \n 4 70200004  Public       Male   -0.961   427.  381.    340. Disadvantaged      \n 5 70200005  Public       Female  0.0856  436.  448.    456. Slightly Disadvant…\n 6 70200006  Public       Female  0.127   570.  469.    475. Slightly Disadvant…\n 7 70200007  Public       Male   -0.0154  772.  745.    694. Slightly Disadvant…\n 8 70200008  Public       Male    1.16    568.  527.    583. Advantaged         \n 9 70200009  Public       Female  1.47    740.  722.    725. Advantaged         \n10 70200010  Public       Male    0.520   586.  540.    590. Slightly Advantaged\n# ℹ 6,549 more rows"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#exploratory-data-analysis",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#exploratory-data-analysis",
    "title": "Take-home Exercise 1",
    "section": "3 Exploratory Data Analysis",
    "text": "3 Exploratory Data Analysis\n\n3.1 Distribution of Performance in Mathematics, Reading and Science\n\n\nCode\n# Distribution of Performance in Mathematics\nP1 &lt;- ggplot(data = stu_qqq_SG_converted,\n       aes(x = MATH)) +\n  geom_density(color = \"#459395\", size = 0.6, fill= \"#459395\", alpha = 0.4) +\n  coord_cartesian(xlim = c(0,1000)) +\n  geom_vline(aes(xintercept = mean(MATH)),\n             color = \"red\", alpha = 0.8, linewidth = 0.7, linetype = \"dashed\") +\n  annotate(\"text\", x = 400, y = 0.0035,\n           label = paste(\"Mean=\", \n                         round(mean(stu_qqq_SG_converted$MATH, na.rm=T), 2)),\n           color = \"red\", size = 3) +\n  geom_vline(aes(xintercept = median(MATH)),\n             color= \"grey50\", linewidth = 0.7, linetype = \"solid\") +\n  annotate(\"text\", x = 800, y = 0.0035,\n           label = paste(\"Median=\", \n                         round(median(stu_qqq_SG_converted$MATH, na.rm=T), 2)),\n           color = \"grey20\", size = 3) +  \n  geom_boxplot(width = 0.0005, fill = \"white\", alpha = 0.5,\n               position = position_nudge(y = -0.0005)) +\n  theme_minimal()+\n  labs(title=\"Distribution of Performance in Mathematics\") +\n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        plot.title=element_text(size= 12),\n        axis.text = element_text(size= 8)) \n\n# Distribution of Performance in Reading\nP2 &lt;- ggplot(data = stu_qqq_SG_converted,\n       aes(x = READ)) +\n  geom_density(color = \"#EB7C69\", size = 0.6, fill= \"#EB7C69\", alpha = 0.4) +\n  coord_cartesian(xlim = c(0,1000)) +\n  geom_vline(aes(xintercept = mean(READ)),\n             color = \"red\", alpha = 0.8, linewidth = 0.7, linetype = \"dashed\") +\n  annotate(\"text\", x = 400, y = 0.0035,\n           label = paste(\"Mean=\", \n                         round(mean(stu_qqq_SG_converted$READ, na.rm=T), 2)),\n           color = \"red\", size = 3) +\n  geom_vline(aes(xintercept = median(READ)),\n             color= \"grey50\", linewidth = 0.7, linetype = \"solid\") +\n  annotate(\"text\", x = 800, y = 0.0035,\n           label = paste(\"Median=\", \n                         round(median(stu_qqq_SG_converted$READ, na.rm=T), 2)),\n           color = \"grey20\", size = 3) +  \n  geom_boxplot(width = 0.0005, fill = \"white\", alpha = 0.5,\n               position = position_nudge(y = -0.0005)) +\n  theme_minimal()+\n  labs(title=\"Distribution of Performance in Reading\",\n       y = \"density\") +\n  theme(axis.title.x = element_blank(),\n        plot.title=element_text(size= 12),\n        axis.text = element_text(size= 8)) \n  \n# Distribution of Performance in Science\nP3 &lt;- ggplot(data = stu_qqq_SG_converted,\n       aes(x = SCIENCE)) +\n  geom_density(color = \"#FDA638\", size = 0.6, fill= \"#FDA638\", alpha = 0.4) +\n  coord_cartesian(xlim = c(0,1000)) +\n  geom_vline(aes(xintercept = mean(SCIENCE)),\n             color = \"red\", alpha = 0.8, linewidth = 0.7, linetype = \"dashed\") +\n  annotate(\"text\", x = 400, y = 0.0035,\n           label = paste(\"Mean=\", \n                         round(mean(stu_qqq_SG_converted$SCIENCE, na.rm=T), 2)),\n           color = \"red\", size = 3) +\n  geom_vline(aes(xintercept = median(SCIENCE)),\n             color= \"grey50\", linewidth = 0.7, linetype = \"solid\") +\n  annotate(\"text\", x = 800, y = 0.0035,\n           label = paste(\"Median=\", \n                         round(median(stu_qqq_SG_converted$SCIENCE, na.rm=T), 2)),\n           color = \"grey20\", size = 3) +  \n  geom_boxplot(width = 0.0005, fill = \"white\", alpha = 0.5,\n               position = position_nudge(y = -0.0005)) +\n  theme_minimal()+\n  labs(title=\"Distribution of Performance in Science\") +\n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        plot.title=element_text(size= 12),\n        axis.text = element_text(size= 8)) \n\n\nP1 / P2 / P3\n\n\n\n\n\nThe density plot for performance in Mathematics, reading and science shows a predominantly normal distribution with a slight left skew, as indicated by mean scores being lower than medians in all subjects. The box plot below reveals tight interquartile range in all subjects, which indicates that 50% of the students performed within a relatively narrow range, emphasizing a strong central tendency.\nAcross three subjects, mathematics showed the highest performance on average, followed by Science and Reading. A similar pattern is observed in the median scores. In mathematics, the right tail extends farther than the other two subjects, indicating the occurrence of maximum PV value in this subject. In reading, the box plot shows a relatively higher number of outliers at the lower range, which indicates this subject has the weakest performance among all subjects.\nThese distributions could be further explored in the context of school, gender, and socioeconomic background to determine if these factors influence the performance distribution.\n\n\n3.2 Relationship between Performance in Mathematics, Reading and Science with Gender\n\n\nCode\nP4 &lt;- ggplot(data= stu_qqq_SG_converted,\n       aes(x= Gender, y= MATH)) +\n  geom_violin(color = \"#459395\", size = 0.6, fill= \"#459395\", alpha = 0.4) +\n  geom_boxplot(width= 0.4, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.5, outlier.shape = 19) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=3) +  coord_cartesian(ylim = c(0,1000)) +\n  scale_color_manual(values=c(\"#999999\", \"#E69F00\")) +\n  theme_minimal() +\n  labs(title=\"Mathematics\") +  \n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        plot.title=element_text(size= 12, hjust= 0.5),\n        axis.text = element_text(size= 10)) \n  \nP5 &lt;- ggplot(data= stu_qqq_SG_converted,\n       aes(x= Gender, y= READ)) +\n  geom_violin(color = \"#EB7C69\", size = 0.6, fill= \"#EB7C69\", alpha = 0.4) +\n  geom_boxplot(width= 0.4, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.5, outlier.shape = 19) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=3) +  coord_cartesian(ylim = c(0,1000)) +  \n  theme_minimal() +\n  labs(title=\"Reading\") + \n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        plot.title=element_text(size= 12, hjust= 0.5),\n        axis.text = element_text(size= 10)) \n  \nP6 &lt;- ggplot(data= stu_qqq_SG_converted,\n       aes(x= Gender, y= SCIENCE)) +\n  geom_violin(color = \"#FDA638\", size = 0.6, fill= \"#FDA638\", alpha = 0.4) +\n  geom_boxplot(width= 0.4, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.5, outlier.shape = 19) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=3) +  coord_cartesian(ylim = c(0,1000)) +  \n  theme_minimal() +\n  labs(title=\"Science\") + \n  theme(axis.title.x = element_blank(),\n        axis.text.y = element_blank(),\n        axis.title.y = element_blank(),\n        plot.title=element_text(size= 12, hjust= 0.5),\n        axis.text = element_text(size= 10)) \n\n(P4 + P5 + P6) +\n    plot_annotation(title= \"Gender-Based Performance Comparison \",\n                    theme = theme(plot.title=element_text(size= 15, hjust= 0.5)))\n\n\n\n\n\nThis EDA visualization utilizes violin plots with integrated box plots to compare academic performance by gender across Mathematics, Reading, and Science among Singaporean students. The violin plots suggest a roughly normal distribution for scores in all subjects, with slight variations. The ‘body’ of each violin is bulged in the middle, indicating a concentration of scores around the median. From the box plot, it is observed that in all subjects, the median and mean are close to each other, with the mean slightly lower, suggesting a modest left skew in the data.\nIn mathematics, the plots indicate males performed slightly better than females, with a slightly higher median and mean. The outliers at the higher end of the scores suggest that some students achieve excellent performance. In Reading, females markedly outperform males, evidenced by higher median and mean values, and a wider distribution at the higher end of scores. Science shows a near-identical performance between genders, with both median and mean scores closely aligned, suggesting minimal gender variation in this subject.\nIn general, performance across different subjects for male and females exhibits a slight variation.\n\n\n3.3 Relationship between Performance in Mathematics, Reading and Science with School Type\n\n\nCode\nP7 &lt;- ggplot(data= stu_qqq_SG_converted,\n       aes(x= TypeofSchool, y= MATH)) +\n  geom_violin(color = \"#459395\", size = 0.6, fill= \"#459395\", alpha = 0.4) +\n  geom_boxplot(width= 0.4, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.5, outlier.shape = 19) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=3) +  coord_cartesian(ylim = c(0,1000)) +\n  scale_color_manual(values=c(\"#999999\", \"#E69F00\")) +\n  theme_minimal() +\n  labs(title=\"Mathematics\") +  \n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        plot.title=element_text(size= 12, hjust= 0.5),\n        axis.text = element_text(size= 10)) \n  \nP8 &lt;- ggplot(data= stu_qqq_SG_converted,\n       aes(x= TypeofSchool, y= READ)) +\n  geom_violin(color = \"#EB7C69\", size = 0.6, fill= \"#EB7C69\", alpha = 0.4) +\n  geom_boxplot(width= 0.4, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.5, outlier.shape = 19) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=3) +  coord_cartesian(ylim = c(0,1000)) +  \n  theme_minimal() +\n  labs(title=\"Reading\") + \n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        plot.title=element_text(size= 12, hjust= 0.5),\n        axis.text = element_text(size= 10)) \n  \nP9 &lt;- ggplot(data= stu_qqq_SG_converted,\n       aes(x= TypeofSchool, y= SCIENCE)) +\n  geom_violin(color = \"#FDA638\", size = 0.6, fill= \"#FDA638\", alpha = 0.4) +\n  geom_boxplot(width= 0.4, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.5, outlier.shape = 19) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=3) +  coord_cartesian(ylim = c(0,1000)) +  \n  theme_minimal() +\n  labs(title=\"Science\") + \n  theme(axis.title.x = element_blank(),\n        axis.text.y = element_blank(),\n        axis.title.y = element_blank(),\n        plot.title=element_text(size= 12, hjust= 0.5),\n        axis.text = element_text(size= 10)) \n\n(P7 + P8 + P9) +\n    plot_annotation(title= \"School-Based Performance Comparison \",\n                    theme = theme(plot.title=element_text(size= 15, hjust= 0.5)))\n\n\n\n\n\nThe EDA visualization comparing student performance across Mathematics, Reading, and Science reveals distinct patterns. Public schools exhibit a broader distribution of scores, suggesting a diverse range of performance levels. Conversely, private schools show a narrower spread, as evidenced by the shorter violin plots, yet with a wider width at the median, indicating a dense clustering of scores around the central tendency. This is further supported by the narrower interquartile range observed in private schools, pointing to a more consistent performance among their students.\nAdditionally, the mean and median scores in private schools are marginally higher than those in public schools, suggesting a slight academic advantage. Moreover, public schools display a greater number of outliers, especially in the lower score range, highlighting a segment of students with performance significantly below the average.\nThese insights suggest that while student performance in private schools is more consistent with a tendency towards higher achievement, public schools demonstrate a wider variability in student outcomes.\n\n\n3.4 Relationship between Performance in Mathematics, Reading and Science with Socioeconomic Status\n\n\nCode\nP10 &lt;- ggplot(data= stu_qqq_SG_converted,\n       aes(x= binned_ESCS, y= MATH)) +\n  geom_violin(color = \"#459395\", size = 0.6, fill= \"#459395\", alpha = 0.4) +\n  geom_boxplot(width= 0.4, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.5, outlier.shape = 19) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=3) +  coord_cartesian(ylim = c(0,1000)) +\n  scale_color_manual(values=c(\"#999999\", \"#E69F00\")) +\n  theme_minimal() +\n  labs(title=\"Mathematics\") +  \n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        plot.title=element_text(size= 12, hjust= 0.5),\n        axis.text = element_text(size= 8),\n        axis.text.x = element_text(angle = 45, hjust = 1)) + \n  scale_x_discrete(breaks = unique(stu_qqq_SG_converted$binned_ESCS), \n                            labels = str_wrap(unique(stu_qqq_SG_converted$binned_ESCS),\n                                              width = 10))\n  \nP11 &lt;- ggplot(data= stu_qqq_SG_converted,\n       aes(x= binned_ESCS, y= READ)) +\n  geom_violin(color = \"#EB7C69\", size = 0.6, fill= \"#EB7C69\", alpha = 0.4) +\n  geom_boxplot(width= 0.4, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.5, outlier.shape = 19) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=3) +  coord_cartesian(ylim = c(0,1000)) +  \n  theme_minimal() +\n  labs(title=\"Reading\") + \n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        plot.title=element_text(size= 12, hjust= 0.5),\n        axis.text = element_text(size= 8),\n        axis.text.x = element_text(angle = 45, hjust = 1)) +  \n  scale_x_discrete(breaks = unique(stu_qqq_SG_converted$binned_ESCS), \n                            labels = str_wrap(unique(stu_qqq_SG_converted$binned_ESCS),\n                                              width = 10))\n  \nP12 &lt;- ggplot(data= stu_qqq_SG_converted,\n       aes(x= binned_ESCS, y= SCIENCE)) +\n  geom_violin(color = \"#FDA638\", size = 0.6, fill= \"#FDA638\", alpha = 0.4) +\n  geom_boxplot(width= 0.4, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.5, outlier.shape = 19) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=3) +  coord_cartesian(ylim = c(0,1000)) +  \n  theme_minimal() +\n  labs(title=\"Science\") + \n  theme(axis.title.x = element_blank(),\n        axis.text.y = element_blank(),\n        axis.title.y = element_blank(),\n        plot.title=element_text(size= 12, hjust= 0.5),\n        axis.text = element_text(size= 8),\n        axis.text.x = element_text(angle = 45, hjust = 1)) +  \n  scale_x_discrete(breaks = unique(stu_qqq_SG_converted$binned_ESCS), \n                            labels = str_wrap(unique(stu_qqq_SG_converted$binned_ESCS),\n                                              width = 10))\n\n(P10 + P11 + P12) +\n    plot_annotation(title= \"Socioeconomic-Based Performance Comparison \",\n                    theme = theme(plot.title=element_text(size= 15, hjust= 0.5)))\n\n\n\n\n\nThe visualization assesses student performance in Mathematics, Reading, and Science against socioeconomic status, categorized as Disadvantaged, Slightly Disadvantaged, Slightly Advantaged, and Advantaged. Across all subjects, a clear pattern is observable, where students from more advantaged backgrounds tend to achieve higher scores. This is evidenced by the upward shift in both the median (the horizontal line within the box) and the mean (the red dot) as we move from Disadvantaged to Advantaged.\nFor all three subjects, the spread of scores (indicated by the width of the violin plots) is broader for Disadvantaged and Slightly Disadvantaged groups, suggesting more variability in performance. It is also observed that the violin plots widen around the 50th percentile range, alongside a narrower interquartile range, indicating a denser concentration of scores near the median as we transition from disadvantaged to advantaged socioeconomic groups.\nThis visualization suggests that socioeconomic status has a consistent correlation with academic performance across different subjects. Further analysis could delve into the specific aspects of socioeconomic advantage that contribute to these patterns.\n\n\n3.5 Relationship between performances in Mathematics and school type across different socioeconomic status\n\n\nCode\nggplot(data= stu_qqq_SG_converted,\n       aes(x=  TypeofSchool, y= MATH)) +\n  geom_boxplot(width= 0.5, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.5, outlier.shape = 19) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=3) +  coord_cartesian(ylim = c(0,1000)) +  \n  facet_grid(~ binned_ESCS) +\n  labs(title= str_wrap(\"Comparative Analysis of Mathematics Performance by \n                       School Type Across Socioeconomic Tiers\"),\n       x = \"Type of School\") +\n  theme(plot.title=element_text(size= 12, hjust= .5),\n        axis.text = element_text(size= 10)) +\n  theme_bw()\n\n\n\n\n\nExtending the findings from the previous section, where we noted that private schools typically demonstrate higher and more consistent student performance, and students from advantaged backgrounds achieve higher scores, we now examine the impact of school type on performance across different socioeconomic levels.\nThe visualization offers a comparative analysis of Mathematics performance between public and private schools across different levels of socioeconomic status. For students classified as disadvantaged, private schools show a higher mean score, indicating a performance advantage in this group. As we move to the slightly disadvantaged socioeconomic status bracket, the mean scores for private schools remain higher, though the difference is less obvious.\nInterestingly, a shift occurs among the slightly advantaged group, where the mean scores for public schools marginally surpass those of private schools. This trend amplifies within the advantaged category, where students in public schools outperform those in private schools, as indicated by higher mean scores. These insights suggest that school type affects educational outcomes differently across socioeconomic groups."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#loading-r-packages",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#importing-pisa-data",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#importing-pisa-data",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "2 Importing PISA data",
    "text": "2 Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\nStep 1: Use read_sas() to read SAS file\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\nStep 2: Filter required data using filter()\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\nStep 3: Save filtered data in R Data Format\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\nStep 4: Read saved R Data format file to ensure that it is working\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#getting-started",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyong-ggplot2-annotation-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyong-ggplot2-annotation-ggrepel",
    "title": "Hands-on Exercise 2",
    "section": "2 Beyong ggplot2 Annotation: ggrepel",
    "text": "2 Beyong ggplot2 Annotation: ggrepel\nggrepel provides geoms for ggplot2 to repel overlapping text labels:\n\ngeom_text_repel()\ngeom_label_repel()\n\ngeom_text_repel adds text directly to the plot. geom_label_repel draws a rectangle underneath the text, making it easier to read. The text labels repel away from each other and away from the data points.\n\nggplot(data= exam_data,\n       aes(x= MATHS,\n           y= ENGLISH,\n           colour= GENDER)) +\n  geom_point() +\n  geom_label_repel(aes(label=ID),\n                   label.padding = 0.2,\n                   label.size = 0.2) +\n  xlim(0,100) +\n  ylim (0,100)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyong-ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyong-ggplot2-themes",
    "title": "Hands-on Exercise 2",
    "section": "3 Beyong ggplot2 Themes",
    "text": "3 Beyong ggplot2 Themes\ngglot2 comes with 10 built-in themes. Theme could be modified by using theme() and element_.\nThe code chunk below plots basic plot with modification to color and fill of the bar before any themes were applied.\n\nggplot(data= exam_data,\n       aes(x= SCIENCE))+\n  geom_histogram(binwidth = 5,\n                 boundary = 5,\n                 color= \"black\",\n                 fill= \"white\") \n\n\n\n\n\n3.1 Working with ggtheme package\nggthemes provides extra theme, geoms, and scales for ggplot2. Refer to these (i) link (ii) link for examples.\n\nggplot(data= exam_data,\n       aes(x= SCIENCE))+\n  geom_histogram(binwidth = 5,\n                 boundary = 5,\n                 color= \"black\",\n                 fill= \"white\") +\n  theme_wsj(base_size = 10,\n             color = \"brown\",\n             base_family = \"sans\",\n             title_family = \"mono\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme(plot.title= element_text(size= 15))\n\n\n\n\n\n\n3.2 Working with hrbrthemes package\nhrbrthemes is a very focused package that provides typography-centric themes and theme components for ggplot2. Consult this vignette to learn more.\n\nggplot(data= exam_data,\n       aes(x= SCIENCE))+\n  geom_histogram(binwidth = 5,\n                 boundary = 5,\n                 color = \"black\",\n                 fill = \"bisque3\",\n                 alpha = 0.6,\n                 linewidth =0.3) +\n  ggtitle(\"Distribution of Science scores\") +\n  theme_ipsum(axis_title_size = 12,\n              base_size = 10,\n              grid_col = \"grey80\",\n              grid = \"Y\")\n\n\n\n\n\n\n\n\n\n\nWhat can we learn from the code chunk above?\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15, and\ngrid argument is used to remove the x-axis grid lines."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyong-single-graph",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyong-single-graph",
    "title": "Hands-on Exercise 2",
    "section": "4 Beyong Single Graph",
    "text": "4 Beyong Single Graph\nPatchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /\n\nTo learn more about, refer to Plot Assembly.\n\n4.1 Combining 2 graphs using ’ + ’\n\np1 &lt;- ggplot(data= exam_data,\n       aes(x= MATHS))+\n  geom_histogram(binwidth = 5,\n                 boundary = 5,\n                 color = \"black\",\n                 fill = \"bisque\",\n                 alpha = 0.6,\n                 linewidth =0.3) +\n  labs(x= \"Maths score\",\n       y= \"No. of students\",\n       title=\"Distribution of Maths scores\") +\n    theme(plot.title= element_text(size= 12, hjust= 0.5),\n          axis.title= element_text(size= 10),\n          panel.background = element_rect(fill= \"grey90\"))\n\np2 &lt;- ggplot(data= exam_data,\n       aes(x= SCIENCE))+\n  geom_histogram(binwidth = 5,\n                 boundary = 5,\n                 color = \"black\",\n                 fill = \"bisque4\",\n                 alpha = 0.6,\n                 linewidth =0.3) +\n  labs(x= \"Science score\",\n       y= \"No. of students\",\n       title=\"Distribution of Science scores\") +\n    theme(plot.title= element_text(size= 12, hjust= 0.5),\n          axis.title= element_text(size= 10),\n          panel.background = element_rect(fill= \"grey90\"),\n          axis.title.y = element_blank())\n          \n\np1 + p2\n\n\n\n\n\n\n4.2 Combining 3 graphs using ’ | ’ ’ / ’ ’ ( ) ’\n\np3 &lt;- ggplot(data = exam_data,\n             aes(MATHS, SCIENCE)) +\n  geom_point(size = 2,\n             color = \"khaki4\",\n             alpha = 0.8) +\n  geom_smooth(method = lm,\n              size = 0.8,\n              color = \"grey20\") +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  labs(title = \"Correlation Plot\",\n       subtitle = \"Science vs Maths scores for Primary 3\") +\n  theme(plot.title=element_text(size= 12),\n        plot.subtitle=element_text(size= 10),\n        axis.title = element_text(size= 10))\n\n(p1 / p2) | p3\n\n\n\n\n\n\n4.3 Adding annotation\n\n((p1 / p2) | p3) + \n  plot_annotation(title= \"Distribution and correlation of Maths and Science scores for Primary 3 students\",\n                  tag_levels = 'i')\n\n\n\n\n\n\n4.4 Insert Figures with Inset_element\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.5, \n                   right = 0.4, \n                   top = 1)\n\n\n\n\n\n\n4.5 Creating a composite figure by using patchwork and ggtheme\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_stata()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n\n\n Back to top"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "First, load R packages using the below code:\n\npacman::p_load(tidyverse)\n\n\n\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nhead(exam_data)\n\n# A tibble: 6 × 7\n  ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n  &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n1 Student321 3I    Male   Malay        21     9      15\n2 Student305 3I    Female Malay        24    22      16\n3 Student289 3H    Male   Chinese      26    16      16\n4 Student227 3F    Male   Chinese      27    77      31\n5 Student318 3I    Male   Malay        27    11      25\n6 Student306 3I    Female Malay        31    16      16\n\n\n\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#getting-started",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "First, load R packages using the below code:\n\npacman::p_load(tidyverse)\n\n\n\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nhead(exam_data)\n\n# A tibble: 6 × 7\n  ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n  &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n1 Student321 3I    Male   Malay        21     9      15\n2 Student305 3I    Female Malay        24    22      16\n3 Student289 3H    Male   Chinese      26    16      16\n4 Student227 3F    Male   Chinese      27    77      31\n5 Student318 3I    Male   Malay        27    11      25\n6 Student306 3I    Female Malay        31    16      16\n\n\n\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#introducing-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#introducing-ggplot",
    "title": "Hands-on Exercise 1",
    "section": "2 Introducing ggplot",
    "text": "2 Introducing ggplot\nggplot2 is an R packages for declaratively creating graphics, based on The Grammar of Graphics. It is also a part of Tidyverse family.\n\n2.1 Grammar of Graphics\nGrammar of Graphics is a general scheme for data visualization which breaks up graphs into semantic components such as scales and layers. It was introduced by Leland Wilkinson (1999) Grammar of Graphics, Springer. It defines the rules of structuring mathematical and aesthetic elements into a meaningful graph.\n\n\n\nA Layered Grammar of Graphics\n\n\nA short description of each building block are as follows:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-geometries",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-geometries",
    "title": "Hands-on Exercise 1",
    "section": "3 ggplot2: Geometries",
    "text": "3 ggplot2: Geometries\nGeometric objects are the actual marks we put on a plot. Refer to complete list here. Examples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\n\ngeom_line for drawing lines (e.g., for a line charts)\n\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\n\ngeom_bar for drawing bars (e.g., for bar charts)\n\ngeom_histogram for drawing binned values (e.g. a histogram)\n\ngeom_polygon for drawing arbitrary shapes\n\ngeom_map for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function)\n\ngeom_dotplot for plotting a dot plot.\ngeom_boxplot for distribution of continuous variable.\ngeom_density for plotting kernel density estimate, a smoothed version of histogram.\ngeom_violin for compact display of a continuous distribution, blending geom_boxplot and geom_density.\n\n\n3.1 Examples of Geom plot\n\nBar chartDotplotHistogramDensity plotBoxplotViolin plotScatterplot\n\n\nThe code chunk below plots a bar chart by using geom_bar().\n\nggplot(data=exam_data,\n       aes(x= RACE)) +\n  geom_bar() \n\n\n\n\n\n\ngeom_dotplot() is used to plot a dot plot. In a dot plot, each dot represents one observation, the width of a dot corresponds to the bin width.\n\nggplot(data=exam_data,\n       aes(x=ENGLISH))+\n  geom_dotplot(binwidth=2.5,\n               dotsize = 0.5)+\n  scale_y_continuous(NULL, breaks = NULL)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk above performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5\n\n\n\n\n\nIn the code chunk below, geom_histogram() is used to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()    \n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote that the default bin is 30.\n\n\n\n\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram. It is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of English scores by showing two kernel density lines by using colour or fill arguments of aes().\n\n\nggplot(data=exam_data, \n       aes(x = ENGLISH, \n           colour = GENDER)) +\n  geom_density()  \n\n\n\n\n\n\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\n\nggplot(data=exam_data, \n       aes(y = ENGLISH,       \n           x= GENDER)) +    \n  geom_boxplot() \n\n\n\n\nNotches are used to compare groups; if the notches of two boxes do not overlap, this suggests that the medians are significantly different.\n\nggplot(data=exam_data, \n       aes(y = ENGLISH, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of English score by race in violin plot.\n\nggplot(data= exam_data,\n       aes(y= ENGLISH,\n           x= RACE)) +\n  geom_violin()\n\n\n\n\n\n\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\nggplot(data= exam_data,\n      aes(x= MATHS,\n          y= ENGLISH)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n3.2 Modifying the plot\n\n3.2.1 By changing geom()\nModifying histogram by changing geom()\n\nggplot(data=exam_data,\n       aes(x= ENGLISH)) +\n  geom_histogram(bins=20,\n                 color=\"#000000\",\n                 fill=\"lightblue\",\n                 size=0.6)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBin, color and fill is now added to the plot\n\n\n\n\n3.2.2 By changing aes()\nModifying histogram by changing aes()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"Grey30\",\n                 size=0.6,\n                 alpha=0.3)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nInstead of showing total count, now they are split into Male and Female\n\n\n\n\n3.2.3 By combining two or more geom objects\n\nggplot(data=exam_data,\n       aes(y= MATHS,\n           x= GENDER)) +\n  geom_boxplot(aes(color=GENDER),\n               width=0.3)+\n  geom_jitter(aes(color=GENDER),\n              size= 0.8)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-facets",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-facets",
    "title": "Hands-on Exercise 1",
    "section": "4 ggplot2: Facets",
    "text": "4 ggplot2: Facets\nFacetting generates small multiples, each displaying a different subset of the data. Facets are an alternative to aesthetics for displaying additional discrete variables. There are two types of facets:\n(i) facet_wrap\n(ii) facet_grid\n\n4.1 Working with facet_wrap()\nfacet_wrap() wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid() because most displays are roughly rectangular. If you have only one variable with many levels, use facet_wrap() instead of facet_grid.\n\nggplot(data=exam_data, \n       aes(x= SCIENCE)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n4.2 Working with facet_grid()\nfacet_grid() forms a matrix of panels defined by row and column faceting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\n\nggplot(data=exam_data,\n       aes(x= SCIENCE,\n           y= MATHS))+\n  geom_point() +\n  facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-statistics",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-statistics",
    "title": "Hands-on Exercise 1",
    "section": "5 ggplot2: Statistics",
    "text": "5 ggplot2: Statistics\n\n5.1 Working with stat_summary()\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"blue\",        \n               size=5)        \n\n\n\n\n\n\n5.2 Working with geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat, refer to the function in stat_summary().\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"green\",          \n             size=5)        \n\n\n\n\n\n\n5.3 Adding a best fit curve on a scatterplot\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best fit curve.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-coordinates",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-coordinates",
    "title": "Hands-on Exercise 1",
    "section": "6 ggplot2: Coordinates",
    "text": "6 ggplot2: Coordinates\nThe Coordinates functions map the position of objects onto the plane of the plot. There are a number of different possible coordinate systems to use, they are:\n\ncoord_cartesian(): the default cartesian coordinate systems, where you specify x and y values (e.g. allows you to zoom in or out).\ncoord_flip(): a cartesian system with the x and y flipped.\ncoord_fixed(): a cartesian system with a “fixed” aspect ratio (e.g. 1.78 for a “widescreen” plot).\ncoord_quickmap(): a coordinate system that approximates a good aspect ratio for maps.\n\n\n6.1 Working with coordinates\nBy default, the bar chart of ggplot2 is in vertical form. The code chunk below flips the vertical bar chart into horizontal bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n6.2 Changing the y-axis and x-axis range\nThe x-axis and y-axis could sometimes be misleading. The code chunk below fixed both the y-axis and x-axis range from 0 to 100.\n\nggplot(data=exam_data,\n       aes(x= MATHS,\n           y= SCIENCE)) +\n  geom_point() +\n  geom_smooth(method= lm,\n              size= 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n\n\n\nAnother method to work with x-axis and y-axis range is to use xlim() and ylim(). Refer to scales.\n\nggplot(data=exam_data,\n       aes(x= MATHS,\n           y= SCIENCE)) +\n  geom_point() +\n  geom_smooth(method= lm,\n              size= 0.5)+\n  xlim(0,100) +\n  ylim(0,100)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-themes",
    "title": "Hands-on Exercise 1",
    "section": "7 ggplot2: Themes",
    "text": "7 ggplot2: Themes\nThemes control elements of the graph not related to the data. For example:\n\nbackground colour\nsize of fonts\ngridlines\ncolour of labels\n\nBuilt-in themes include: theme_gray() (default) theme_bw() theme_classic()\nA list of theme can be found at this link. Each theme element can be conceived of as either a line (e.g. x-axis), a rectangle (e.g. graph background), or text (e.g. axis title). To modify component of a theme, refer to this link.\nThe default theme is theme_gray().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\nA horizontal bar chart plotted using theme_minimal().\n\nggplot(data=exam_data,\n       aes(x= RACE)) +\n  geom_bar()+\n  coord_flip()+\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#modifying-the-plot-1",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#modifying-the-plot-1",
    "title": "Hands-on Exercise 1",
    "section": "8 Modifying the plot",
    "text": "8 Modifying the plot\nModifying bar chart by\n(i) changing geom()\n(ii) adding labels and title\n(iii) changing the theme\n\nggplot(data=exam_data,\n       aes(x= RACE)) +\n  geom_bar(alpha= 0.5) +\n  labs(x = \"Race\",\n       y = \"Number of Students\",\n       title = \"Race Distribution of Exam Data\")+\n  theme_classic()+\n  theme(plot.title = element_text(hjust=0.5))\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nOpacity of the bar chart has changed.\nX-axis label, y-axis label and title was added.\nA classic-looking theme, with x and y axis lines and no gridlines."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "Summary\nThis hands-on exercise consist of two main topic, namely:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#Section1",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#Section1",
    "title": "Hands-on Exercise 3",
    "section": "1 Programming Interactive Data Visualisation with R",
    "text": "1 Programming Interactive Data Visualisation with R\n\n1.1 Loading R packages\n\npacman::p_load(ggiraph, plotly,\n               patchwork, DT, tidyverse)\n\n\nR packages for Interactive Data\n\nggiraph ：making ‘ggplot’ graphics interactive.\nplotly ： R library for plotting interactive statistical graphs.\nDT ： provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse ： a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork ： combining multiple ggplot2 graphs into one figure.\n\n\n\n\n1.2 Importing the Data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n1.3 Overview of the data\n\nexam_data\n\n# A tibble: 322 × 7\n   ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n   &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n 1 Student321 3I    Male   Malay        21     9      15\n 2 Student305 3I    Female Malay        24    22      16\n 3 Student289 3H    Male   Chinese      26    16      16\n 4 Student227 3F    Male   Chinese      27    77      31\n 5 Student318 3I    Male   Malay        27    11      25\n 6 Student306 3I    Female Malay        31    16      16\n 7 Student313 3I    Male   Chinese      31    21      25\n 8 Student316 3I    Male   Malay        31    18      27\n 9 Student312 3I    Male   Malay        33    19      15\n10 Student297 3H    Male   Indian       34    49      37\n# ℹ 312 more rows\n\n\n\n\n1.4 Interactive Data Visualisation - ggiraph methods\n\nggiraph makes ‘ggplot’ graphics interactive with these arguments.\n\nTooltip : tooltips to be displayed when mouse is over elements.\nData_id: id to be associated with elements (used for hover and click actions).\n\nOnclick: JavaScript function to be executed when elements are clicked.\n\n\n\n1.4.1 Tooltip effect with tooltip aesthetic\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(                          # Create basic graph\n    aes(tooltip = ID),                               # specify tooltip here\n    stackgroups = TRUE,                             \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL) +\n  theme_minimal()\n\ngirafe(ggobj = p,                                 # generate svg object on an html page.\n       width_svg = 6,\n       height_svg = 6*0.618)\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nHover over a dot to check out the student’s ID\n\n\nDisplaying multiple information on tooltip\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n# create a new field called tooltip with desired data \nexam_data$tooltip &lt;- c(paste0(\"Name = \", exam_data$ID,         \n                              \"\\n Class = \", exam_data$CLASS,\n                              \"\\n Gender = \", exam_data$GENDER)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),      # newly created field used as tooltip field \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  theme_minimal()\n\ngirafe(ggobj = p,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nHover over a dot. Now, more information is shown!\n\n\nCustomising Tooltip style\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\ntooltip_css &lt;- \n\"background-color:grey;                     \nfont-style:bold; \ncolor:black;\nfont-size: 1.2em\"                     # customise tooltip css\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  theme_minimal()\n\ngirafe(ggobj = p,                             \n       width_svg = 6,                         \n       height_svg = 6*0.618,\n       options = list(opts_tooltip(css = tooltip_css)))  # add the tooltip_css here                                      \n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nbackground colour of the tooltip is grey and the font colour is white and bold.\n\n\nDisplaying statistics on tooltip\nUsing stat_summary(), a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) \n  {mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),) +\n  \n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(tooltip(y, ymax))),        # adding tool tip\n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\") +\n  \n  stat_summary(aes(y = MATHS),                        # adding error bar\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.1, size = 0.2) +\n  theme_minimal()\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n1.4.2 Hover effect with data_id\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  \n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),                        # specify data_id here       \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +\n  \n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  theme_minimal()\n\ngirafe(ggobj = p,                             \n       width_svg = 6,                         \n       height_svg = 6*0.618)                                             \n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. The default color is orange.\n\n\nStyling hover effect\n\nCustomize highlighting effect\n\nusing opts_hover() for effect on geometries\nusing opts_hover_inv for effect on other geometries\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  \n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),                        # specify data_id here       \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +\n  \n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  theme_minimal()\n\ngirafe(ggobj = p,                             \n       width_svg = 6,                         \n       height_svg = 6*0.618,\n       options = list(opts_hover(css = \"fill: blue;\"),          # effect on geometries\n                      opts_hover_inv(css = \"opacity:0.2;\")))    # effect on other geometries\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nDifferent from previous example, in this example the ccs customisation request are encoded directly.\n\n\n\n\n1.4.3 Combining tooltip and hover effect\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  \n  geom_dotplot_interactive(           \n    aes(tooltip = CLASS,                          # specify tooltip here  \n        data_id =  CLASS),                        # specify data_id here       \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +\n  \n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  theme_minimal()\n\ngirafe(ggobj = p,                             \n       width_svg = 6,                         \n       height_svg = 6*0.618,\n       options = list(opts_hover(css = \"fill: blue;\"),          # effect on geometries\n                      opts_hover_inv(css = \"opacity:0.2;\")))    # effect on other geometries\n\n\n\n\n\n\n\n\n\n\nInteractivity\n\n\n\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS.\n\n\n\n\n1.4.4 Coordinated Multiple Views\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  \n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS,\n        data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  theme_minimal()\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  \n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS,\n        data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  theme_minimal()\n\ngirafe(code = print(p1 / p2), \n       width_svg = 6,\n       height_svg = 6,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")))\n\n\n\n\n\n\n\n\n\n\nInteractivity\n\n\n\n\nNotice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point.\n\n\n\n\n\n1.4.5 Click effect with onclick\nonclick argument of ggiraph provides hotlink interactivity on the web.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  \n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  \n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  theme_minimal()\n\ngirafe(ggobj = p,                             \n       width_svg = 6,                         \n       height_svg = 6*0.618)   \n\n\n\n\n\n\n\n\n\n\nInteractivity\n\n\n\nWeb document link with a data object will be displayed on the web browser upon mouse click.\n\n\n\n\n\n1.5 Interactive Data Visualisation - plotly methods\n\nThere are two ways to create interactive graph by using plotly, they are:\n\nby using plot_ly()\nby using ggplotly()\n\n\n\n1.5.1 Using plot_ly()\n\nbasicadding color\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\n\n1.5.2 Using ggplotly()\n\nAppropriate ggplot2 functions are used to create a scatter plot.\nggplotly() is used to convert the R graphic object into interactive object.\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)                                   # add this line\n\n\n\n\n\n\n1.5.3 Coordinated Multiple Views with ggplotly()\nThree steps for creating coordinated linked plot:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nsubplot() of plotly package is used to place them next to each other side-by-side.\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)                        # Step 1 \n\np1 &lt;- ggplot(data=d,                                 # Step 2\n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) \n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\nsubplot(ggplotly(p1),                              # Step 3\n        ggplotly(p2))\n\n\n\n\n\n\n\n1.6 Interactive Data Visualisation - crosstalk methods\n\n\nCrosstalk is an add-on to the htmlwidgets package.\nIt extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\n\n\n1.6.1 Interactive Data Table: DT package\nDT package allow rendering of data objects as HTML tables.\n\nDT::datatable(exam_data[c(\"ID\",\"CLASS\",\"GENDER\",\"RACE\",\"ENGLISH\",\"MATHS\",\"SCIENCE\")], class= \"compact\")\n\n\n\n\n\n\n\n\n1.6.2 Linked brushing: crosstalk method\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \n\np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\nThings to learn from the code chunk:\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#Section2",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#Section2",
    "title": "Hands-on Exercise 3",
    "section": "2 Programming Animated Statistical Graphics with R",
    "text": "2 Programming Animated Statistical Graphics with R\n\n2.1 Loading R packages\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\nR packages for Animated plot\n\nplotly : plotting interactive statistical graphs.\ngganimate : creating animated statistical graphs.\ngifski : converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse : a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\n\n\n2.2 Importing the Data\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  \n# change \"Country\" and \"Continent\" (aka col) as factor \n  mutate(across(col, as.factor)) %&gt;%  \n  \n# change \"Year\" as integer   \n  mutate(Year = as.integer(Year))          \n\nAlternatively, use mutate_all()\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  \n# change \"Country\" and \"Continent\" (aka col) as factor \n  mutate_at(col, as.factor) %&gt;%  \n  \n# change \"Year\" as integer   \n  mutate(Year = as.integer(Year))          \n\n\nThings to learn from the code chunk above\n\nread_xls() of readxl package is used to import the Excel worksheet.\nmutate() of dplyr package is used to create new columns or modify columns that are functions of existing variables.\nacross() apply the same functions to multiple columns\nmutate_at() convert all character data type columns into factor.\n\n\n\n\n2.3 Overview of the data\n\nglobalPop\n\n# A tibble: 6,204 × 6\n   Country      Year Young   Old Population Continent\n   &lt;fct&gt;       &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt; &lt;fct&gt;    \n 1 Afghanistan  1996  83.6   4.5     21560. Asia     \n 2 Afghanistan  1998  84.1   4.5     22913. Asia     \n 3 Afghanistan  2000  84.6   4.5     23898. Asia     \n 4 Afghanistan  2002  85.1   4.5     25268. Asia     \n 5 Afghanistan  2004  84.5   4.5     28514. Asia     \n 6 Afghanistan  2006  84.3   4.6     31057  Asia     \n 7 Afghanistan  2008  84.1   4.6     32738. Asia     \n 8 Afghanistan  2010  83.7   4.6     34505. Asia     \n 9 Afghanistan  2012  82.9   4.6     36416. Asia     \n10 Afghanistan  2014  82.1   4.7     38327. Asia     \n# ℹ 6,194 more rows\n\n\n\n\n2.4 Animated Data Visualisation: gganimate methods\ngganimate extends the grammar of graphics as implemented by ggplot2 to include the description of animation. It does this by providing a range of new grammar classes that can be added to the plot object in order to customise how it should change with time.\n\nSample Syntax\n\ntransition_*() defines how the data should be spread out and how it relates to itself across time.\nview_*() defines how the positional scales should change along the animation.\nshadow_*() defines how data from other points in time should be presented in the given point in time.\nenter_*()/exit_*() defines how new data should appear and how old data should disappear during the course of the animation.\nease_aes() defines how different aesthetics should be eased during transitions.\n\n\n\nStaticAnimated\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population,     # the size of dot depends on population \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +              # add this line\n  ease_aes('linear')                   # and this line\n\n\n\n\n\n\n\n\nFor animated plot:\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\n\n\n2.5 Animated Data Visualisation: plotly\n\n2.5.1 Using plot_ly()\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  \n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\n\nbp\n\n\n\n\n\n\n2.5.2 Using ggplotly()\n\nAppropriate ggplot2 functions are used to create a static bubble plot.\nThe output is then saved as an R object called gg.\nggplotly() is used to convert the R graphic object into an animated svg object.\n\n\nWith legendWithout legend\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +                       # this doesn't work\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')                       # use this instead\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\nalthough show.legend = FALSE argument was used, the legend still appears on the plot.\nTo overcome this problem, theme(legend.position='none') should be used."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#reference",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3.html#reference",
    "title": "Hands-on Exercise 3",
    "section": "3 Reference",
    "text": "3 Reference\n\nKam, T.S.(2023) Programming Interactive Data Visualisation with R\nKam, T.S.(2023) Programming Animated Statistical Graphics with R"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to my ISSS608 Visual Analytics and Applications learning space.\n\n\n\n Back to top"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#data-preparation",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#data-preparation",
    "title": "Take-home Exercise 2",
    "section": "2 Data preparation",
    "text": "2 Data preparation\n\n2.1 Loading R packages\n\npacman::p_load(tidyverse, haven, patchwork, ggdist, ggrain, ggridges, quarto)\n\n\n\n2.2 Importing PISA data\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")\nselect_df &lt;- stu_qqq_SG[c(3:4,7,26,1039,1167:1196)]\n\n\n\n2.3 Data cleaning\nTo ensure consistency in the dataset employed for make over, I refer to the code chunk used by the original author. However, I will not go into details as it is not the focus of this exercise.\nExpand the following session to show the code chunk.\n\n\nCode\n#Convert wide-format into long-format\nmath_long &lt;- select_df %&gt;%\n  pivot_longer(\n    cols = contains(\"MATH\"),\n    names_to = \"MATH\",\n    values_to = \"MATH_score\"\n  )\nmath_long &lt;- math_long %&gt;% \n  arrange(CNTSCHID, CNTSTUID, STRATUM, ST004D01T, ESCS)\nmath_long_selected &lt;- select(math_long, -contains(\"READ\"), -contains(\"SCIE\"))\n\nread_long &lt;- select_df %&gt;%\n  pivot_longer(\n    cols = contains(\"READ\"),\n    names_to = \"READ\",\n    values_to = \"READ_score\"\n  )\nread_long &lt;- read_long %&gt;% \n  arrange(CNTSCHID, CNTSTUID, STRATUM, ST004D01T, ESCS)\nread_long_selected &lt;- select(read_long, -contains(\"MATH\"), -contains(\"SCIE\"), -one_of(names(math_long_selected)))\n\nscie_long &lt;- select_df %&gt;%\n  pivot_longer(\n    cols = contains(\"SCIE\"),\n    names_to = \"SCIENCE\",\n    values_to = \"SCIENCE_score\"\n  )\nscie_long &lt;- scie_long %&gt;% \n  arrange(CNTSCHID, CNTSTUID, STRATUM, ST004D01T, ESCS)\nscie_long_selected &lt;- select(scie_long, -contains(\"MATH\"), -contains(\"READ\"), -one_of(names(math_long_selected)))\n\ncombined_long_df &lt;- bind_cols(math_long_selected, read_long_selected, scie_long_selected)\n\n\n\n\nCode\n#translate column names\nschool_map &lt;- c(\"SGP01\" = \"Public/Secondary\",\n                \"SGP02\" = \"Public/Post-secondary\",\n                \"SGP03\" = \"Private/Secondary\",\n                \"SGP97\" = \"Undisclosed\")\ngender_map &lt;- c(\"1\" = \"Female\",\n                \"2\" = \"Male\")\nclean_df &lt;- combined_long_df %&gt;%\n  mutate(SCHOOL = school_map[STRATUM],\n         GENDER = gender_map[ST004D01T],\n         Math = as.numeric(MATH_score),\n         Read = as.numeric(READ_score),\n         Science = as.numeric(SCIENCE_score),\n         ESC_status = round(((ESCS - min(ESCS, na.rm = TRUE))/\n                              (max(ESCS, na.rm = TRUE)-min(ESCS, na.rm = TRUE)))*100, digits = 0),\n         ESC_status = case_when(\n           ESC_status &gt;= 0 & ESC_status &lt; 25 ~ \"Low\",\n           ESC_status &gt;= 25 & ESC_status &lt; 50 ~ \"Lower-Middle\",\n           ESC_status &gt;= 50 & ESC_status &lt; 75 ~ \"Upper-Middle\",\n           ESC_status &gt;= 75 & ESC_status &lt;= 100 ~ \"High\",\n           TRUE ~ as.character(ESC_status)\n         ))\n\n#remove columns which are not used to plot\nclean_short_df &lt;- clean_df %&gt;%\n  select(-c(CNTSCHID, STRATUM, ST004D01T, ESCS, MATH_score, READ_score, SCIENCE_score))\n\n\n\n\nCode\n#translate column names\nschool_map &lt;- c(\"SGP01\" = \"Public/Secondary\",\n                \"SGP02\" = \"Public/Post-secondary\",\n                \"SGP03\" = \"Private/Secondary\",\n                \"SGP97\" = \"Undisclosed\")\ngender_map &lt;- c(\"1\" = \"Female\",\n                \"2\" = \"Male\")\nclean_df &lt;- combined_long_df %&gt;%\n  mutate(SCHOOL = school_map[STRATUM],\n         GENDER = gender_map[ST004D01T],\n         Math = as.numeric(MATH_score),\n         Read = as.numeric(READ_score),\n         Science = as.numeric(SCIENCE_score),\n         ESC_status = round(((ESCS - min(ESCS, na.rm = TRUE))/\n                              (max(ESCS, na.rm = TRUE)-min(ESCS, na.rm = TRUE)))*100, digits = 0),\n         ESC_status = case_when(\n           ESC_status &gt;= 0 & ESC_status &lt; 25 ~ \"Low\",\n           ESC_status &gt;= 25 & ESC_status &lt; 50 ~ \"Lower-Middle\",\n           ESC_status &gt;= 50 & ESC_status &lt; 75 ~ \"Upper-Middle\",\n           ESC_status &gt;= 75 & ESC_status &lt;= 100 ~ \"High\",\n           TRUE ~ as.character(ESC_status)\n         ))\n\n#remove columns which are not used to plot\nclean_short_df &lt;- clean_df %&gt;%\n  select(-c(CNTSCHID, STRATUM, ST004D01T, ESCS, MATH_score, READ_score, SCIENCE_score))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#visualization-critique-and-remake",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#visualization-critique-and-remake",
    "title": "Take-home Exercise 2",
    "section": "3 Visualization Critique and Remake",
    "text": "3 Visualization Critique and Remake\n\n3.1 Plot 1\nThe following plot illustrates the distribution of students’ performance across Mathematics, Science and English.\n\n\n3.1.1 Critique\nClarity\nMisleading Layout: Two of the plots are stacked on the left with one larger plot on the right. The arrangement may confuse the focus and hinder direct comparison, stacking them vertically would provide a clearer comparison across all subjects.\nInconsistencies in Axis Values: The x-axis and y-axis values are inconsistent across the plots, it hampers the ability to make direct comparisons, affecting the clarity of the comparative analysis.\nIndistinguishable Color Usage: The line colors for median, Q1, and Q3 are too similar, which make it hard to differentiate between these statistics.\nOverlapping Annotations: While displaying annotations and statistics on the graph can be informative, it is difficult for the user to read when the annotations overlap with the histogram\nAesthetics\nPlot Title Font Size: The plot title is in a bigger font size, which enhances the emphasis and readability.\nMinimalist Design: A minimalist approach ensures a clean look. Yet, using only monochromatic tone is less visually engaging.\nAnnotation Colors: Distinct colors for annotations enhance visual interest and draw attention to important figures.\n\n\n3.1.2 Sketch\n\n\n\n3.1.3 Make Over\n\n\nCode\n#Plot composite histograms for Math, Read, Science\n\np1 &lt;- ggplot(data = clean_short_df,\n             aes(x= Math))+\n  geom_histogram(bins=20,\n                 color = \"grey30\",\n                 fill=\"slategray1\",\n                 size = 0.5,\n                 alpha = 0.7) +\n  geom_vline(aes(xintercept=mean(Math)), \n             color=c(\"red\"), \n             size=1, \n             linetype=\"dashed\") +\n  annotate(\"text\", x = 400, y = 10000,\n           label = paste(\"Mean:\", \n                         round(mean(clean_short_df$Math), 2)),\n           color = \"red\", size = 4) +    \n  geom_vline(aes(xintercept=median(Math)), \n             color=c(\"blue\"), \n             size=1, \n             linetype=\"solid\") +\n  annotate(\"text\", x = 800, y = 10000,\n           label = paste(\"Median:\", \n                         round(median(clean_short_df$Math), 2)),\n           color = \"blue\", size = 4) +    \n  coord_cartesian(xlim=c(0,1000), ylim=c(0,12000)) +\n  geom_boxplot(width = 800,\n               fill = \"white\", \n               color = \"black\",\n               alpha = 0.6,\n               outlier.colour = \"grey30\",\n               outlier.fill = \"white\",\n               outlier.size = 2,\n               outlier.alpha = 0.3) +\n  theme_minimal() +\n  theme(axis.title.y = element_blank())\n\n\np2 &lt;- ggplot(data = clean_short_df,\n             aes(x= Read))+\n  geom_histogram(bins=20,\n                 color = \"grey30\",\n                 fill=\"slategray1\",\n                 size = 0.5,\n                 alpha = 0.7) +\n  geom_vline(aes(xintercept=mean(Read)), \n             color=c(\"red\"), \n             size=1, \n             linetype=\"dashed\") +\n  annotate(\"text\", x = 400, y = 10000,\n           label = paste(\"Mean:\", \n                         round(mean(clean_short_df$Read), 2)),\n           color = \"red\", size = 4) +    \n  geom_vline(aes(xintercept=median(Read)), \n             color=c(\"blue\"), \n             size=1, \n             linetype=\"solid\") +\n  annotate(\"text\", x = 800, y = 10000,\n           label = paste(\"Median:\", \n                         round(median(clean_short_df$Read), 2)),\n           color = \"blue\", size = 4) +    \n  coord_cartesian(xlim=c(0,1000), ylim=c(0,12000)) +\n  geom_boxplot(width = 800,\n               fill = \"white\", \n               color = \"black\",\n               alpha = 0.6,\n               outlier.colour = \"grey30\",\n               outlier.fill = \"white\",\n               outlier.size = 2,\n               outlier.alpha = 0.3) +\n  labs(y= \"No. of Students\") +\n  theme_minimal() \n\np3 &lt;- ggplot(data = clean_short_df,\n             aes(x= Science))+\n  geom_histogram(bins=20,\n                 color = \"grey30\",\n                 fill=\"slategray1\",\n                 size = 0.5,\n                 alpha = 0.7) +\n  geom_vline(aes(xintercept=mean(Science)), \n             color=c(\"red\"), \n             size=1, \n             linetype=\"dashed\") +\n  annotate(\"text\", x = 400, y = 10000,\n           label = paste(\"Mean:\", \n                         round(mean(clean_short_df$Science), 2)),\n           color = \"red\", size = 4) +    \n  geom_vline(aes(xintercept=median(Science)), \n             color=c(\"blue\"), \n             size=1, \n             linetype=\"solid\") +\n  annotate(\"text\", x = 800, y = 10000,\n           label = paste(\"Median:\", \n                         round(median(clean_short_df$Science), 2)),\n           color = \"blue\", size = 4) +    \n  coord_cartesian(xlim=c(0,1000), ylim=c(0,12000)) +\n  geom_boxplot(width = 800,\n               fill = \"white\", \n               color = \"black\",\n               alpha = 0.6,\n               outlier.colour = \"grey30\",\n               outlier.fill = \"white\",\n               outlier.size = 2,\n               outlier.alpha = 0.3) +\n  theme_minimal() +\n  theme(axis.title.y = element_blank())\n\n(p1 /  p2 / p3) + plot_annotation(title= \"Distribution of Performance across Subjects\",\n                    theme = theme(plot.title=element_text(size= 14, hjust= 0.5)))\n\n\n\n\n\nLayout improvement and consistent axis value: All three plots are stacked vertically with consistent x-axis and y-axis value. This provide a clear and direct comparison across all subjects.\nIncorporate box plot: Instead of changing the line colour for median, Q1 and Q3, a box plot is added along the x-axis, along with a mean line, simplifies the interpretation of central tendency, spread, and outliers, enhancing the visualization of key statistical data.\nAnnotations: To enhance readability and interpretation, annotations have been placed above the histogram with distinct colors, ensuring they do not overlap with the data and remain clearly visible to users.\nImproved Color Scheme: While maintaining a minimalist theme, the introduction of a blue fill to the histogram created color contrast, improving both visual appeal and data differentiation.\n\n\n\n3.2 Plot 2\nThis combined density plot overlays the distributions of math performance for different genders across three subjects.\n\n\n3.2.1 Critique\nClarity\nTitle : The title is too generic and does not provide enough context about the plot.\nPlot type: Good choice of density plot for understanding the distribution of data.\nMisleading Layout: Two plots are stacked on the left with one larger plot on the right. The arrangement may confuse the focus and hinder direct comparison, stacking them vertically would provide a clearer comparison across all subjects.\nAxis Label: When the plots are stacked together, using only one label enhances the clarity and neatness of the plot\nAxis scale: Well-used of consistent x-axis scale which enhances the comparability between subjects.\nConsistency: Ensure all plots consistently include or exclude annotations for comparative analysis.\nAesthetic\nMinimalist Design: A minimalist approach ensures a clean look, focusing on essential data.\nColor Choice: Effective use of colour to distinguish between male and female performance distribution.\n\n\n3.2.2 Sketch\n\n\n\n3.2.3 Make Over\n\n\nCode\n##Gender and Subject\n#1. Math\n\n\np4 &lt;- ggplot(data = clean_short_df, \n             aes(x = Math, \n                 fill = GENDER)) +\n  geom_density(alpha = 0.3) +\n  coord_cartesian(xlim = c(0, 1000), ylim = c(0, 0.005)) +\n  theme_minimal()+\n  theme(legend.position = \"none\") +\n  theme(axis.title.y = element_blank())\n\n\np5 &lt;- ggplot(data = clean_short_df, \n             aes(x = Read,\n                 fill = GENDER)) +\n  geom_density(alpha=0.3) +\n  coord_cartesian(xlim = c(0, 1000)) +\n  theme_minimal() \n\n\np6 &lt;- ggplot(data = clean_short_df, \n             aes(x = Science,\n                 fill = GENDER)) +\n  geom_density(alpha=0.3) +\n  coord_cartesian(xlim = c(0, 1000)) +\n  theme_minimal()+\n  theme(legend.position = \"none\") +\n  theme(axis.title.y = element_blank())\n\n\n\n(p4 / p5 /p6) + plot_annotation(title= \n                                  \"Gender-Based Performance Comparison Across Subjects\",\n                    theme = theme(plot.title=element_text(size= 14, hjust= 0.5)))\n\n\n\n\n\nClarity of Title: Improved the title to provide more context about the plot, making it more informative and engaging.\nLayout improvement and consistent axis value: Reorganized the layout by stacking all plots vertically with consistent x-axis and y-axis value. This provide a clear and direct comparison across all subjects.\nConsistency in Annotations: Ensured that all plots consistently exclude annotations for comparative analysis. This consistency allows users to better understand and interpret the data.\n\n\n\n3.3 Plot 3\nIn the following plot, boxplot is used to examine performance on each subject in terms of school types.\n\n\n3.3.1 Critique\nClarity\nTitle : The title is too generic and does not provide enough context about the plot.\nPlot type and layout : Good choice of box plot and side-by-side arrangement for comparing the performance of private and public school across different subjects.\nAxis Title and label: The x-axis label is repetitive, consider simplifying it to enhance the clarity and help in comparison.\nAxis Values: The y-axis values are inconsistent across the plots, which limits the ability to make direct comparison.\nSubtitle : Instead of using subject as y-axis label, placing it on top of each plot as subtitle would enhance overall clarity.\nData Points: Outliers are identified, which is helpful to understand the distribution. However, as they are stacked together, it’s difficult to interpret the outliers’ distribution and significance.\nAesthetic\nSimplicity: The design is simple, which is good for clarity but can be less engaging.\nConsistency: The styling is consistent across all plots.\n\n\n3.3.2 Sketch\n\n\n\n3.3.3 Make Over\n\n\nCode\n# Deriving mean value\nMath_school &lt;- clean_short_df %&gt;%\n  group_by(SCHOOL) %&gt;%\n  summarise(\n    Freq = n(),\n    Mean = mean(Math, na.rm= TRUE))\n\nRead_school &lt;- clean_short_df %&gt;%\n  group_by(SCHOOL) %&gt;%\n  summarise(\n    Freq = n(),\n    Mean = mean(Read, na.rm= TRUE))\n\nScience_school &lt;- clean_short_df %&gt;%\n  group_by(SCHOOL) %&gt;%\n  summarise(\n    Freq = n(),\n    Mean = mean(Science, na.rm= TRUE))\n\n# Ploting boxplot\n\np7 &lt;- ggplot(data= clean_short_df,\n       aes(x= SCHOOL, y= Math, color = SCHOOL)) +\n  geom_boxplot(width= 0.3, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.3, outlier.shape = 19) +\n  coord_cartesian(ylim = c(0, 1000)) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=2) +  coord_cartesian(ylim = c(0,1000)) +\n  geom_text(data = Math_school,\n            aes(x = SCHOOL, y=Mean, label = paste(\"Mean:\\n\", round(Mean,2))),\n            color = \"red\", \n            hjust = -0.3, \n            vjust = -2, \n            size= 2.75)+  \n  scale_color_manual(values=c(\"steelblue\", \"goldenrod\")) +\n  theme_minimal() +\n  labs(title=\"Mathematics\") +  \n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.x = element_blank(),\n        plot.title=element_text(size= 12, hjust= 0.5),\n        axis.text = element_text(size= 8)) \n\np8 &lt;- ggplot(data= clean_short_df,\n       aes(x= SCHOOL, y= Read, color = SCHOOL)) +\n  geom_boxplot(width= 0.3, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.3, outlier.shape = 19) +\n  coord_cartesian(ylim = c(0, 1000)) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=2) +  coord_cartesian(ylim = c(0,1000)) +\n  geom_text(data = Read_school,\n            aes(x = SCHOOL, y=Mean, label = paste(\"Mean:\\n\", round(Mean,2))),\n            color = \"red\", \n            hjust = -0.3, \n            vjust = -2, \n            size= 2.75)+  \n  scale_color_manual(values=c(\"steelblue\", \"goldenrod\")) +\n  theme_minimal() +\n  labs(title=\"Reading\") +  \n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.x = element_blank(),\n        axis.text.y = element_blank(),\n        plot.title=element_text(size= 12, hjust= 0.5),\n        axis.text = element_text(size= 10))   \n\np9 &lt;- ggplot(data= clean_short_df,\n       aes(x= SCHOOL, y= Science, color = SCHOOL)) +\n  geom_boxplot(width= 0.3, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.3, outlier.shape = 19) +\n  coord_cartesian(ylim = c(0, 1000)) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=2) +  coord_cartesian(ylim = c(0,1000)) +\n  geom_text(data = Science_school,\n            aes(x = SCHOOL, y=Mean, label = paste(\"Mean:\\n\", round(Mean,2))),\n            color = \"red\", \n            hjust = -0.3, \n            vjust = -2, \n            size= 2.75)+  \n  scale_color_manual(values=c(\"steelblue\", \"goldenrod\")) +\n  theme_minimal() +\n  labs(title=\"Science\") +  \n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.x = element_blank(),\n        axis.text.y = element_blank(),\n        plot.title=element_text(size= 12, hjust= 0.5),\n        axis.text = element_text(size= 10))  \n\n\np7 + p8 + p9 + \n  plot_layout(guides = \"collect\") +\n  plot_annotation(title= \"School-Based Performance Comparison Across Subjects\",\n                    theme = theme(plot.title=element_text(size= 14, hjust= 0.5)))\n\n\n\n\n\nTitle: The title has been revised to provide more context about the plot.\nAesthetic and Engagement: Different colors are assigned to each school type, not only enhancing visual appeal but also make it easier to distinguish between the two categories.\nAxis Title and label: Repetitive x-axis labels have been removed and a clear legend has been used to improve clarity and facilitate comparison.\nConsistency in Axes: The y-axis values were standardized for all plots, which enabled direct comparison across all subjects.\nSubtitle: Placing subject names as subtitles provides clear identification for each plot.\nData Points: The opacity of the outliers are adjusted to enhance clarity, and mean values are highlighted with red dots and annotation for easy reference.\n\n\n\n3.4 Plot 4\nThe following plot reveals the relationship between student performance and socioeconomic status across different subjects.\n\n\n3.4.1 Critique\nClarity\nTitle : The title is too generic and does not provide enough context about the plot.\nPlot type and layout: Good choice of box plot and side-by-side arrangement for comparing the performance of various socioeconomic status across different subjects.\nAxis Title and label: The x-axis label is repetitive, consider simplifying it to enhance the clarity and help in comparison. Incorrectly ordered of x-axis data, can mislead users and leading to potential misinterpretations.\nAxis Values: The y-axis values are inconsistent across the plots, which limits the ability to make direct comparisons.\nSubtitle : Instead of using subject as y-axis label, placing it on top of each plot as subtitle would enhance overall clarity.\nData Points: Outliers are identified, which is helpful to understand the distribution. However, as they are stacked together, it’s difficult to interpret the outliers’ distribution and significance.\nAesthetic\nSimplicity: The design is simple, which is good for clarity but can be less engaging.\nConsistency: The styling is consistent across all plots.\n\n\n3.4.2 Sketch\n\n\n\n3.4.3 Make Over\n\n\nCode\nclean_short_df$ESC_status &lt;- factor(clean_short_df$ESC_status, levels = c(\"Low\", \"Lower-Middle\", \"Upper-Middle\", \"High\"))\n\np10 &lt;- ggplot(data= na.omit(clean_short_df),\n       aes(x= ESC_status, y= Math, color = ESC_status)) +\n  geom_boxplot(width= 0.3, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.3, outlier.shape = 19) +\n  coord_cartesian(ylim = c(0, 1000)) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=2) +\n  coord_cartesian(ylim = c(0,1000)) +\n  theme_minimal() +\n  labs(title=\"Mathematics\") +  \n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.x = element_blank(),\n        plot.title=element_text(size= 12, hjust= 0.5),\n        axis.text = element_text(size= 8)) + \n  labs(color = \"ESCS status\") \n\np11 &lt;- ggplot(data= na.omit(clean_short_df),\n       aes(x= ESC_status, y= Read, color = ESC_status)) +\n  geom_boxplot(width= 0.3, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.3, outlier.shape = 19) +\n  coord_cartesian(ylim = c(0, 1000)) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=2) +  \n  coord_cartesian(ylim = c(0,1000)) +\n  theme_minimal() +\n  labs(title=\"Reading\") +  \n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.x = element_blank(),\n        axis.text.y = element_blank(),\n        plot.title=element_text(size= 12, hjust= 0.5),\n        axis.text = element_text(size= 10)) + \n  labs(color = \"ESCS status\")   \n\np12 &lt;- ggplot(data= na.omit(clean_short_df),\n       aes(x= ESC_status, y= Science, color = ESC_status)) +\n  geom_boxplot(width= 0.3, outlier.colour = \"grey30\", outlier.size = 2, \n               outlier.alpha = 0.3, outlier.shape = 19) +\n  coord_cartesian(ylim = c(0, 1000)) +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=2) +  \n  coord_cartesian(ylim = c(0,1000)) +\n  theme_minimal() +\n  labs(title=\"Science\") +  \n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.x = element_blank(),\n        axis.text.y = element_blank(),\n        plot.title=element_text(size= 12, hjust= 0.5),\n        axis.text = element_text(size= 10)) + \n  labs(color = \"ESCS status\")\n\n\np10 + p11 + p12 + \n  plot_layout(guides = \"collect\") +\n  plot_annotation(title= \"Socioeconomic-Based Performance Comparison Across Subjects\",\n                    theme = theme(plot.title=element_text(size= 14, hjust= 0.5)))\n\n\n\n\n\nTitle: The title has been revised to provide more context about the plot.\nAesthetic and Engagement: Different colors are assigned to each socioeconomic status, not only enhancing visual appeal but also make it easier to distinguish between the categories.\nAxis Title and label: Repetitive x-axis labels have been removed and a clear legend has been used to improve clarity and facilitate comparison. The x-axis data has been corrected to represent the categories in a logical sequence, ensuring clear and accurate comparisons and preventing any potential misinterpretation.\nConsistency in Axes: The y-axis values were standardized for all plots, which enabled direct comparison across all subjects.\nSubtitle: Placing subject names as subtitles provides clear identification for each plot.\nData Points: The opacity of the outliers are adjusted to enhance clarity, and mean values are highlighted with red dots for easy reference.\n\n\nCode\n&lt;!-- Include the pop-up template --&gt;\n&lt;iframe src=\"popup_template.html\" frameborder=\"0\" width=\"100%\" height=\"400\"&gt;&lt;/iframe&gt;\n\n\nTo view the comparison, click here."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "The aim of this exercise is to perform a makeover to improve the original visualisation completed by one of the classmates on exercise 1. In terms of the makeover, our approach is to critic the submission in terms of the clarity and aesthetic then remake the original design by using the data visualisation design principles and best practices we had learnt."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#overview",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#overview",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "The aim of this exercise is to perform a makeover to improve the original visualisation completed by one of the classmates on exercise 1. In terms of the makeover, our approach is to critic the submission in terms of the clarity and aesthetic then remake the original design by using the data visualisation design principles and best practices we had learnt."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "Summary\nThis hands-on exercise consists of 4 main sections, namely:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#Section1",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#Section1",
    "title": "Hands-on Exercise 4",
    "section": "1 Visualising Distribution",
    "text": "1 Visualising Distribution\nIn previous chapter, we learn to create following statistical graphics using ggplot2: - histogram, probability density curve (pdf), boxplot, notch plot and violin plot\nIn this chapter, two relatively new statistical graphic methods are introduced, namely: (i) ridgeline plot (ii) raincloud plot by using ggplot2 and its extensions.\n\n1.1 Loading R packages\nFor the purpose of this exercise, the following R packages will be used, they are:\n\ntidyverse - a family of R packages for data science process,\nggridges - a ggplot2 extension specially designed for plotting ridgeline plots, and\nggdist - visualising distribution and uncertainty.\n\n\n\nCode\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\n\n\n\n1.2 Importing data\nFor the purpose of this exercise, Exam_data.csv will be used.\n\n\nCode\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n1.3 Ridgeline Plot\nUsing Ridgeline plot (aka Joyplot), distribution of a numeric value for several groups can be represented using histograms or density plots, all aligned to the same horizontal scale and presented with a slight overlap.\nRidgeline plots works well when: - the number of group to represent is medium to high as it allows us to use space more efficiently - there is more than 5 groups (distribution plots is probably better for less than 5 groups) - there is a clear pattern in the result, like if there is an obvious ranking in groups to avoid overlapping\nThere are several ways to plot ridgeline plot with R. In this section, you will learn how to plot ridgeline plot by using ggridges package.\nggridges package provides two main geom to plot gridgeline plots, they are: - geom_ridgeline() - takes height values directly to draw the ridgelines - geom_density_ridges() - first estimates data densities and then draws those using ridgelines\nFollowing are examples of plot using geom_density_ridges():\n\nBasic plot\nVarying fill colors using geom_density_ridges_gradient() (or geom_ridgeline_gradient())\nMapping the probabilities directly onto colour using stat(ecdf)\nAdding quantile lines using stat(quantile)\nHighlighting specific quantile - 2.5% and 97.5%\n\n\niiiiiiivv\n\n\n\n\nCode\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nCode\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nCode\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nCode\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nCode\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n1.4 Raincloud Plot\nRaincloud Plot produces a half-density to a distribution plot which enhances the traditional box-plot by highlighting multiple modalities (an indicator that groups may exist).\nIn this section, a raincloud plot visualising the distribution of English score by race will be created by using functions provided by ggdist and ggplot2 packages.\n\nPlotting a Half Eye graph by using stat_halfeye()\nAdding the boxplot with geom_boxplot()\nAdding the Dot Plots with stat_dots()\nFlipping it horizontally using coord_flip()\n\nFollowing are examples of raincloud plot and the modification:\n\niiiiiiiv\n\n\n\n\nCode\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA,\n               fill = \"lightblue\") +\n  theme_minimal()\n\n\n\n\n\n\nThings to learn from the code chunk above\nslab interval is removed by setting .width = 0 and point_colour = NA.\n\n\n\n\n\nCode\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.15,\n               .width = 0,\n               point_colour = NA,\n               fill = \"lightblue\") +\n  geom_boxplot(width = .1,\n               outlier.shape = NA) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nCode\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.15,\n               .width = 0,\n               point_colour = NA,\n               fill = \"lightblue\") +\n  geom_boxplot(width = .1,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.1, \n            binwidth = .5,\n            dotsize = 2) +\n  theme_minimal() \n\n\n\n\n\n\n\n\n\nCode\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.15,\n               .width = 0,\n               point_colour = NA,\n               fill = \"lightblue\") +\n  geom_boxplot(width = .1,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.1, \n            binwidth = .5,\n            dotsize = 1.5,\n            fill = \"grey70\",\n            color = \"grey70\") +          # dotsize is adjusted\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#Section2",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#Section2",
    "title": "Hands-on Exercise 4",
    "section": "2 Visual Statistical Analysis",
    "text": "2 Visual Statistical Analysis\n\nggstatsplot is an extension of ggplot2 package for creating graphics with details from statistical tests included in the information-rich plots themselves.\n\nTo provide alternative statistical inference methods by default.\nTo follow best practices for statistical reporting. For all statistical tests reported in the plots, the default template abides by the APA gold standard for statistical reporting. For example, here are results from a robust t-test:\n\n\n\n2.1 ggstatsplot\n\n2.1.1 Loading R packages\nIn this exercise, ggstatsplot and tidyverse will be used.\n\n\nCode\npacman::p_load(ggstatsplot, tidyverse)\n\n\n\n\n2.1.2 Importing data\nFor the purpose of this exercise, Exam_data.csv will be used. The following code is used to import Exam_data.csv\n\n\nCode\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n2.1.3 Statistical Tests\nFollowing are the graphics with details from various statistical tests:\n\nOne-sample test: gghistostats()\nTwo-sample mean test: ggbetweenstats()\nTwo-sample mean test: ggbetweenstats()\nSignificant Test of Correlation: ggscatterstats()\nSignificant Test of Association (Depedence) : ggbarstats()\n\n\niiiiiiivv\n\n\n\n\nCode\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\n\nCode\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\nCode\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\nCode\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using cut().\n\n\nCode\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100)))\n\n\nIn this code chunk below ggbarstats() is used to build a visual for Significant Test of Association\n\n\nCode\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)\n\n\n\n\n\n\n\n\n\n\n2.1.4 Unpacking the Bayes Factor\n\nA Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\nThat’s because the Bayes factor gives us a way to evaluate the data in favor of a null hypothesis, and to use external information to do so. It tells us what the weight of the evidence is in favor of a given hypothesis.\nWhen we are comparing two hypotheses, H1 (the alternate hypothesis) and H0 (the null hypothesis), the Bayes Factor is often written as B10.\nThe Schwarz criterion is one of the easiest ways to calculate rough approximation of the Bayes Factor.\nA Bayes Factor can be any positive number. One of the most common interpretations is this one—first proposed by Harold Jeffereys (1961) and slightly modified by Lee and Wagenmakers in 2013\n\n\n\n\n2.2 Models\nIn this section, we visualise model diagnostic and model parameters by using parameters package.\n\nToyota Corolla case study will be used. The purpose of study is to build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables.\n\n\n2.2.1 Loading R packages\n\n\nCode\npacman::p_load(readxl, performance, parameters, see)\n\n\n\n\n2.2.2 Importing data\nIn the code chunk below, read_xls() of readxl package is used to import the data worksheet of ToyotaCorolla.xls workbook into R.\n\n\nCode\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\n\n\n2.2.3 Multiple Regression Model using lm()\nThe code chunk below is used to calibrate a multiple linear regression model by using lm() of Base Stats of R.\n\n\nCode\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\n2.2.4 Model Diagnostic\n\nchecking for multicolinearity using check_collinearity()\nchecking normality assumption using check_normality()\nCheck model for homogeneity of variances using check_heteroscedasticity()\nComplete check using check_model()\n\n\niiiiiiiv\n\n\n\n\nCode\ncheck_collinearity(model)\n\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\n\nCode\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\n\n\nCode\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\n\n\nCode\ncheck_n &lt;- check_normality(model1)\n\n\n\n\nCode\nplot(check_n)\n\n\n\n\n\n\n\n\n\nCode\ncheck_h &lt;- check_heteroscedasticity(model1)\n\n\n\n\nCode\nplot(check_h)\n\n\n\n\n\n\n\n\n\nCode\ncheck_model(model1)\n\n\n\n\n\n\n\n\n\n\n2.2.5 Visualising Regression Parameters\nThere are two methods to visualise regression parameters: (i) See method using plot() and parameters() (ii) using ggcoefstats()\nExamples of the plots are as follows:\n\niii\n\n\n\n\nCode\nplot(parameters(model1))\n\n\n\n\n\n\n\n\n\nCode\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#Section3",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#Section3",
    "title": "Hands-on Exercise 4",
    "section": "3 Visualising Uncertainty",
    "text": "3 Visualising Uncertainty\n\n3.1 Installing and loading the packages\n\n\nCode\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\n\n\nCode\npacman::p_load(ungeviz, plotly, crosstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)\n\n\n\n\n3.2 Importing data\n\n\nCode\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n3.3 ggplot2 methods\n\n\nCode\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\n\n\n\nCode\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\n\nPlotting standard error bars of point estimates\nPlotting confidence interval of point estimates\nVisualizing the uncertainty of point estimates with interactive error bars\n\n\niiiiii\n\n\n\n\nCode\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\n\n\n\nCode\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.4 ggdist methods\n\ndisplaying distribution of maths scores by race using stat_pointinterval()\nShowing median\nshowing 95% and 99% confidence intervals\ndisplaying distribution of maths scores by race using stat_gradientinterval()\n\n\niiiiiiiv\n\n\n\n\nCode\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\nCode\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\nCode\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\nCode\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"pink\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n\n\n\n\n\n\n\n\n\n\n3.5 Hypothetical Outcome Plots (HOPs)\n\n\nCode\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\n\n\nCode\nlibrary(ungeviz)\n\n\n\n\nCode\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)          # `.draw` is a generated column indicating the sample draw"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#Section4",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#Section4",
    "title": "Hands-on Exercise 4",
    "section": "4 Funnel Plots for Fair Comparisons",
    "text": "4 Funnel Plots for Fair Comparisons\n\n4.1 Installing and Launching R Packages\n\n\nCode\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n\n\n\n\n4.2 Importing Data\n\n\nCode\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)\n\n\n\n\n4.3 FunnelPlotR methods\n\nbasicmakeover 1makeover 2\n\n\n\n\nCode\nfunnel_plot(\n  numerator = covid19$Positive,\n  denominator = covid19$Death,\n  group = covid19$`Sub-district`\n)\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\nCode\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\nCode\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n4.4 ggplot2 methods\n\n4.4.1 Computing the basic derived fields\n\n\nCode\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\n\n\n\nCode\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\n\n\n\n4.4.2 Calculate lower and upper limits for 95% and 99.9% CI\n\n\nCode\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\n\nStaticInteractive\n\n\n\n\nCode\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\n\n\n\nCode\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#iii-1",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#iii-1",
    "title": "Hands-on Exercise 4",
    "section": "2 iii",
    "text": "2 iii\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#reference",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4.html#reference",
    "title": "Hands-on Exercise 4",
    "section": "5 Reference",
    "text": "5 Reference\n\nKam, T.S.(2023) Visualising Distribution\nKam, T.S.(2023) Visual Statistical Analysis\nKam, T.S.(2023) Visualising Uncertainty\nKam, T.S.(2023) Funnel Plots for Fair Comparisons"
  }
]