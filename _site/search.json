[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to my ISSS608 Visual Analytics and Applications learning space.\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n\n\n Back to top"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "First, load R packages using the below code:\n\npacman::p_load(tidyverse)\n\n\n\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nhead(exam_data)\n\n# A tibble: 6 × 7\n  ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n  &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n1 Student321 3I    Male   Malay        21     9      15\n2 Student305 3I    Female Malay        24    22      16\n3 Student289 3H    Male   Chinese      26    16      16\n4 Student227 3F    Male   Chinese      27    77      31\n5 Student318 3I    Male   Malay        27    11      25\n6 Student306 3I    Female Malay        31    16      16\n\n\n\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#loading-r-package",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#loading-r-package",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "First, load R packages using the below code:\n\npacman::p_load(tidyverse, readr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#wragling-data",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#wragling-data",
    "title": "Hands-on Exercise 1",
    "section": "4.1 Wragling Data",
    "text": "4.1 Wragling Data"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#bar-plot-1",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#bar-plot-1",
    "title": "Hands-on Exercise 1",
    "section": "3.1 Bar plot",
    "text": "3.1 Bar plot\n\nBar plot\n\n\n\nggplot(data=exam_data,\n       aes(x= RACE)) +\n  geom_bar(alpha= 0.5) +\n  labs(x = \"Race\",\n       y = \"Number of Students\",\n       title = \"Race distribution of Exam Data\")+\n  theme_classic()+\n  theme(plot.title = element_text(hjust=0.5))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#histogram-1",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#histogram-1",
    "title": "Hands-on Exercise 1",
    "section": "3.2 Histogram",
    "text": "3.2 Histogram\n\nggplot(data=exam_data,\n       aes(x= MATHS)) +\n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill=\"light blue\")\n\n\n\n\n:::"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#working-with-facet_wrap",
    "title": "Hands-on Exercise 1",
    "section": "4.1 Working with facet_wrap()",
    "text": "4.1 Working with facet_wrap()\n\nggplot(data=exam_data, \n       aes(x= SCIENCE)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ GENDER)+\n  theme_bw()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#loading-r-packages",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#importing-pisa-data",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#importing-pisa-data",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "2 Importing PISA data",
    "text": "2 Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\nStep 1: Use read_sas() to read SAS file\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\nStep 2: Filter required data using filter()\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\nStep 3: Save filtered data in R Data Format\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\nStep 4: Read saved R Data format file to ensure that it is working\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#getting-started",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "First, load R packages using the below code:\n\npacman::p_load(tidyverse)\n\n\n\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nhead(exam_data)\n\n# A tibble: 6 × 7\n  ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n  &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n1 Student321 3I    Male   Malay        21     9      15\n2 Student305 3I    Female Malay        24    22      16\n3 Student289 3H    Male   Chinese      26    16      16\n4 Student227 3F    Male   Chinese      27    77      31\n5 Student318 3I    Male   Malay        27    11      25\n6 Student306 3I    Female Malay        31    16      16\n\n\n\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#plotting-basic-plot",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#plotting-basic-plot",
    "title": "Hands-on Exercise 1",
    "section": "4 Plotting basic plot",
    "text": "4 Plotting basic plot\n\nBar plotHistogramBoxplot\n\n\n\nggplot(data=exam_data,\n       aes(x= RACE)) +\n  geom_bar() \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()    \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#modifying-the-plot",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#modifying-the-plot",
    "title": "Hands-on Exercise 1",
    "section": "4 Modifying the plot",
    "text": "4 Modifying the plot\n\nBar chartHistogram 1Histogram 2Box plot 1Box plot 2\n\n\nModifying bar chart by\n(i) changing geom()\n(ii) adding labels and title\n(iii) changing the theme\n\nggplot(data=exam_data,\n       aes(x= RACE)) +\n  geom_bar(alpha= 0.5) +\n  labs(x = \"Race\",\n       y = \"Number of Students\",\n       title = \"Race Distribution of Exam Data\")+\n  theme_classic()+\n  theme(plot.title = element_text(hjust=0.5))\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nOpacity of the bar chart has changed.\nX-axis label, y-axis label and title was added.\nA classic-looking theme, with x and y axis lines and no gridlines.\n\n\n\n\nModifying histogram by changing geom()\n\nggplot(data=exam_data,\n       aes(x= ENGLISH)) +\n  geom_histogram(bins=20,\n                 color=\"#905C29\",\n                 fill=\"#E1C2A3\",\n                 size=0.8)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBin, color and fill is now added to the plot\n\n\n\n\nModifying histogram by changing aes()\n\nggplot(data=exam_data, \n       aes(x= ENGLISH, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"Grey30\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nInstead of showing count as a whole, now they are split into Male and Female\n\n\n\n\nWorking with stat - the stat_summary() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"blue\",        \n               size=5)        \n\n\n\n\n\n\nWorking with stat - the geom() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"green\",          \n             size=5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#more-plots",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#more-plots",
    "title": "Hands-on Exercise 1",
    "section": "5 More plots…",
    "text": "5 More plots…\n\n5.1 Working with facet_wrap()\n\nggplot(data=exam_data, \n       aes(x= SCIENCE)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ GENDER)+\n  theme_bw()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#introducing-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#introducing-ggplot",
    "title": "Hands-on Exercise 1",
    "section": "2 Introducing ggplot",
    "text": "2 Introducing ggplot\nggplot2 is an R packages for declaratively creating graphics, based on The Grammar of Graphics. It is also a part of Tidyverse family.\n\n2.1 Grammar of Graphics\nGrammar of Graphics is a general scheme for data visualization which breaks up graphs into semantic components such as scales and layers. It was introduced by Leland Wilkinson (1999) Grammar of Graphics, Springer. It defines the rules of structuring mathematical and aesthetic elements into a meaningful graph.\n\n\n\nA Layered Grammar of Graphics\n\n\nA short description of each building block are as follows:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-geometries",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-geometries",
    "title": "Hands-on Exercise 1",
    "section": "3 ggplot2: Geometries",
    "text": "3 ggplot2: Geometries\nGeometric objects are the actual marks we put on a plot. Refer to complete list here. Examples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\n\ngeom_line for drawing lines (e.g., for a line charts)\n\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\n\ngeom_bar for drawing bars (e.g., for bar charts)\n\ngeom_histogram for drawing binned values (e.g. a histogram)\n\ngeom_polygon for drawing arbitrary shapes\n\ngeom_map for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function)\n\ngeom_dotplot for plotting a dot plot.\ngeom_boxplot for distribution of continuous variable.\ngeom_density for plotting kernel density estimate, a smoothed version of histogram.\ngeom_violin for compact display of a continuous distribution, blending geom_boxplot and geom_density.\n\n\n3.1 Examples of Geom plot\n\nBar chartDotplotHistogramDensity plotBoxplotViolin plotScatterplot\n\n\nThe code chunk below plots a bar chart by using geom_bar().\n\nggplot(data=exam_data,\n       aes(x= RACE)) +\n  geom_bar() \n\n\n\n\n\n\ngeom_dotplot() is used to plot a dot plot. In a dot plot, each dot represents one observation, the width of a dot corresponds to the bin width.\n\nggplot(data=exam_data,\n       aes(x=ENGLISH))+\n  geom_dotplot(binwidth=2.5,\n               dotsize = 0.5)+\n  scale_y_continuous(NULL, breaks = NULL)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk above performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5\n\n\n\n\n\nIn the code chunk below, geom_histogram() is used to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()    \n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote that the default bin is 30.\n\n\n\n\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram. It is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of English scores by showing two kernel density lines by using colour or fill arguments of aes().\n\n\nggplot(data=exam_data, \n       aes(x = ENGLISH, \n           colour = GENDER)) +\n  geom_density()  \n\n\n\n\n\n\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\n\nggplot(data=exam_data, \n       aes(y = ENGLISH,       \n           x= GENDER)) +    \n  geom_boxplot() \n\n\n\n\nNotches are used to compare groups; if the notches of two boxes do not overlap, this suggests that the medians are significantly different.\n\nggplot(data=exam_data, \n       aes(y = ENGLISH, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of English score by race in violin plot.\n\nggplot(data= exam_data,\n       aes(y= ENGLISH,\n           x= RACE)) +\n  geom_violin()\n\n\n\n\n\n\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\nggplot(data= exam_data,\n      aes(x= MATHS,\n          y= ENGLISH)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n3.2 Modifying the plot\n\n3.2.1 By changing geom()\nModifying histogram by changing geom()\n\nggplot(data=exam_data,\n       aes(x= ENGLISH)) +\n  geom_histogram(bins=20,\n                 color=\"#000000\",\n                 fill=\"lightblue\",\n                 size=0.6)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBin, color and fill is now added to the plot\n\n\n\n\n3.2.2 By changing aes()\nModifying histogram by changing aes()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"Grey30\",\n                 size=0.6,\n                 alpha=0.3)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nInstead of showing total count, now they are split into Male and Female\n\n\n\n\n3.2.3 By combining two or more geom objects\n\nggplot(data=exam_data,\n       aes(y= MATHS,\n           x= GENDER)) +\n  geom_boxplot(aes(color=GENDER),\n               width=0.3)+\n  geom_jitter(aes(color=GENDER),\n              size= 0.8)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#modifying-the-plot-1",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#modifying-the-plot-1",
    "title": "Hands-on Exercise 1",
    "section": "8 Modifying the plot",
    "text": "8 Modifying the plot\nModifying bar chart by\n(i) changing geom()\n(ii) adding labels and title\n(iii) changing the theme\n\nggplot(data=exam_data,\n       aes(x= RACE)) +\n  geom_bar(alpha= 0.5) +\n  labs(x = \"Race\",\n       y = \"Number of Students\",\n       title = \"Race Distribution of Exam Data\")+\n  theme_classic()+\n  theme(plot.title = element_text(hjust=0.5))\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nOpacity of the bar chart has changed.\nX-axis label, y-axis label and title was added.\nA classic-looking theme, with x and y axis lines and no gridlines."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-facets",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-facets",
    "title": "Hands-on Exercise 1",
    "section": "4 ggplot2: Facets",
    "text": "4 ggplot2: Facets\nFacetting generates small multiples, each displaying a different subset of the data. Facets are an alternative to aesthetics for displaying additional discrete variables. There are two types of facets:\n(i) facet_wrap\n(ii) facet_grid\n\n4.1 Working with facet_wrap()\nfacet_wrap() wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid() because most displays are roughly rectangular. If you have only one variable with many levels, use facet_wrap() instead of facet_grid.\n\nggplot(data=exam_data, \n       aes(x= SCIENCE)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n4.2 Working with facet_grid()\nfacet_grid() forms a matrix of panels defined by row and column faceting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\n\nggplot(data=exam_data,\n       aes(x= SCIENCE,\n           y= MATHS))+\n  geom_point() +\n  facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-statistics",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-statistics",
    "title": "Hands-on Exercise 1",
    "section": "5 ggplot2: Statistics",
    "text": "5 ggplot2: Statistics\n\n5.1 Working with stat_summary()\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"blue\",        \n               size=5)        \n\n\n\n\n\n\n5.2 Working with geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat, refer to the function in stat_summary().\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"green\",          \n             size=5)        \n\n\n\n\n\n\n5.3 Adding a best fit curve on a scatterplot\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best fit curve.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-coordinates",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-coordinates",
    "title": "Hands-on Exercise 1",
    "section": "6 ggplot2: Coordinates",
    "text": "6 ggplot2: Coordinates\nThe Coordinates functions map the position of objects onto the plane of the plot. There are a number of different possible coordinate systems to use, they are:\n\ncoord_cartesian(): the default cartesian coordinate systems, where you specify x and y values (e.g. allows you to zoom in or out).\ncoord_flip(): a cartesian system with the x and y flipped.\ncoord_fixed(): a cartesian system with a “fixed” aspect ratio (e.g. 1.78 for a “widescreen” plot).\ncoord_quickmap(): a coordinate system that approximates a good aspect ratio for maps.\n\n\n6.1 Working with coordinates\nBy default, the bar chart of ggplot2 is in vertical form. The code chunk below flips the vertical bar chart into horizontal bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n6.2 Changing the y-axis and x-axis range\nThe x-axis and y-axis could sometimes be misleading. The code chunk below fixed both the y-axis and x-axis range from 0 to 100.\n\nggplot(data=exam_data,\n       aes(x= MATHS,\n           y= SCIENCE)) +\n  geom_point() +\n  geom_smooth(method= lm,\n              size= 0.5)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n\n\n\nAnother method to work with x-axis and y-axis range is to use xlim() and ylim(). Refer to scales.\n\nggplot(data=exam_data,\n       aes(x= MATHS,\n           y= SCIENCE)) +\n  geom_point() +\n  geom_smooth(method= lm,\n              size= 0.5)+\n  xlim(0,100) +\n  ylim(0,100)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#ggplot2-themes",
    "title": "Hands-on Exercise 1",
    "section": "7 ggplot2: Themes",
    "text": "7 ggplot2: Themes\nThemes control elements of the graph not related to the data. For example:\n\nbackground colour\nsize of fonts\ngridlines\ncolour of labels\n\nBuilt-in themes include: theme_gray() (default) theme_bw() theme_classic()\nA list of theme can be found at this link. Each theme element can be conceived of as either a line (e.g. x-axis), a rectangle (e.g. graph background), or text (e.g. axis title). To modify component of a theme, refer to this link.\nThe default theme is theme_gray().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\nA horizontal bar chart plotted using theme_minimal().\n\nggplot(data=exam_data,\n       aes(x= RACE)) +\n  geom_bar()+\n  coord_flip()+\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyong-ggplot2-annotation-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyong-ggplot2-annotation-ggrepel",
    "title": "Hands-on Exercise 2",
    "section": "2 Beyong ggplot2 Annotation: ggrepel",
    "text": "2 Beyong ggplot2 Annotation: ggrepel\nggrepel provides geoms for ggplot2 to repel overlapping text labels:\n\ngeom_text_repel()\ngeom_label_repel()\n\ngeom_text_repel adds text directly to the plot. geom_label_repel draws a rectangle underneath the text, making it easier to read. The text labels repel away from each other and away from the data points.\n\nggplot(data= exam_data,\n       aes(x= MATHS,\n           y= ENGLISH,\n           colour= GENDER)) +\n  geom_point() +\n  geom_label_repel(aes(label=ID),\n                   label.padding = 0.2,\n                   label.size = 0.2) +\n  xlim(0,100) +\n  ylim (0,100)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyong-ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyong-ggplot2-themes",
    "title": "Hands-on Exercise 2",
    "section": "3 Beyong ggplot2 Themes",
    "text": "3 Beyong ggplot2 Themes\ngglot2 comes with 10 built-in themes. Theme could be modified by using theme() and element_.\nThe code chunk below plots basic plot with modification to color and fill of the bar before any themes were applied.\n\nggplot(data= exam_data,\n       aes(x= SCIENCE))+\n  geom_histogram(binwidth = 5,\n                 boundary = 5,\n                 color= \"black\",\n                 fill= \"white\") \n\n\n\n\n\n3.1 Working with ggtheme package\nggthemes provides extra theme, geoms, and scales for ggplot2. Refer to these (i) link (ii) link for examples.\n\nggplot(data= exam_data,\n       aes(x= SCIENCE))+\n  geom_histogram(binwidth = 5,\n                 boundary = 5,\n                 color= \"black\",\n                 fill= \"white\") +\n  theme_wsj(base_size = 10,\n             color = \"brown\",\n             base_family = \"sans\",\n             title_family = \"mono\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme(plot.title= element_text(size= 15))\n\n\n\n\n\n\n3.2 Working with hrbrthemes package\nhrbrthemes is a very focused package that provides typography-centric themes and theme components for ggplot2. Consult this vignette to learn more.\n\nggplot(data= exam_data,\n       aes(x= SCIENCE))+\n  geom_histogram(binwidth = 5,\n                 boundary = 5,\n                 color = \"black\",\n                 fill = \"bisque3\",\n                 alpha = 0.6,\n                 linewidth =0.3) +\n  ggtitle(\"Distribution of Science scores\") +\n  theme_ipsum(axis_title_size = 12,\n              base_size = 10,\n              grid_col = \"grey80\",\n              grid = \"Y\")\n\n\n\n\n\n\n\n\n\n\nWhat can we learn from the code chunk above?\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15, and\ngrid argument is used to remove the x-axis grid lines."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyong-single-graph",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyong-single-graph",
    "title": "Hands-on Exercise 2",
    "section": "4 Beyong Single Graph",
    "text": "4 Beyong Single Graph\nPatchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /\n\nTo learn more about, refer to Plot Assembly.\n\n4.1 Combining 2 graphs using ’ + ’\n\np1 &lt;- ggplot(data= exam_data,\n       aes(x= MATHS))+\n  geom_histogram(binwidth = 5,\n                 boundary = 5,\n                 color = \"black\",\n                 fill = \"bisque\",\n                 alpha = 0.6,\n                 linewidth =0.3) +\n  labs(x= \"Maths score\",\n       y= \"No. of students\",\n       title=\"Distribution of Maths scores\") +\n    theme(plot.title= element_text(size= 12, hjust= 0.5),\n          axis.title= element_text(size= 10),\n          panel.background = element_rect(fill= \"grey90\"))\n\np2 &lt;- ggplot(data= exam_data,\n       aes(x= SCIENCE))+\n  geom_histogram(binwidth = 5,\n                 boundary = 5,\n                 color = \"black\",\n                 fill = \"bisque4\",\n                 alpha = 0.6,\n                 linewidth =0.3) +\n  labs(x= \"Science score\",\n       y= \"No. of students\",\n       title=\"Distribution of Science scores\") +\n    theme(plot.title= element_text(size= 12, hjust= 0.5),\n          axis.title= element_text(size= 10),\n          panel.background = element_rect(fill= \"grey90\"),\n          axis.title.y = element_blank())\n          \n\np1 + p2\n\n\n\n\n\n\n4.2 Combining 3 graphs using ’ | ’ ’ / ’ ’ ( ) ’\n\np3 &lt;- ggplot(data = exam_data,\n             aes(MATHS, SCIENCE)) +\n  geom_point(size = 2,\n             color = \"khaki4\",\n             alpha = 0.8) +\n  geom_smooth(method = lm,\n              size = 0.8,\n              color = \"grey20\") +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  labs(title = \"Correlation Plot\",\n       subtitle = \"Science vs Maths scores for Primary 3\") +\n  theme(plot.title=element_text(size= 12),\n        plot.subtitle=element_text(size= 10),\n        axis.title = element_text(size= 10))\n\n(p1 / p2) | p3\n\n\n\n\n\n\n4.3 Adding annotation\n\n((p1 / p2) | p3) + \n  plot_annotation(title= \"Distribution and correlation of Maths and Science scores for Primary 3 students\",\n                  tag_levels = 'i')\n\n\n\n\n\n\n4.4 Insert Figures with Inset_element\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.5, \n                   right = 0.4, \n                   top = 1)\n\n\n\n\n\n\n4.5 Creating a composite figure by using patchwork and ggtheme\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_stata()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#getting-started",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/exam_data.csv\")"
  }
]